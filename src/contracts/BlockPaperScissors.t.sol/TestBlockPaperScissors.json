{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BPS",
      "outputs": [
        {
          "internalType": "contract BlockPaperScissors",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCastVoteAndGetters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff199081166001908117909255600480549091169091179055601c80546001600160a01b0319166201234517905534801561004357600080fd5b5061331d806100536000396000f3fe60806040523480156200001157600080fd5b5060043610620000fd5760003560e01c806385226c811162000097578063b5508aa9116200006e578063b5508aa914620001cb578063ba414fa614620001d5578063e20c9f7114620001f0578063fa7626d414620001fa57600080fd5b806385226c8114620001945780638da5cb5b14620001ad578063916a17c614620001c157600080fd5b8063249d39e911620000d8578063249d39e9146200013a5780633e5e3c2314620001675780633f7286f4146200017157806366d9a9a0146200017b57600080fd5b80630a9254e414620001025780630bfc0194146200010e5780631ed7831c1462000118575b600080fd5b6200010c62000208565b005b6200010c62000379565b62000122620006a7565b60405162000131919062000f47565b60405180910390f35b601d546200014e906001600160a01b031681565b6040516001600160a01b03909116815260200162000131565b620001226200070b565b620001226200076d565b62000185620007cf565b60405162000131919062000f96565b6200019e620008c2565b6040516200013191906200107c565b601b546200014e906001600160a01b031681565b620001856200099c565b6200019e62000a86565b620001df62000b60565b604051901515815260200162000131565b6200012262000c95565b600054620001df9060ff1681565b601b80546001600160a01b03191633179055604080516318caf8e360e31b81523060048201526024810191909152602060448201527f426c6f636b506170657253636973736f7273207465737420636f6e74726163746064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b1580156200029d57600080fd5b505af1158015620002b2573d6000803e3d6000fd5b50505050604051620002c49062000f39565b604051809103906000f080158015620002e1573d6000803e3d6000fd5b50601d80546001600160a01b0319166001600160a01b03928316179055601c5460405163c88a5e6d60e01b815291166004820152683635c9adc5dea000006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b1580156200035e57600080fd5b505af115801562000373573d6000803e3d6000fd5b50505050565b601c5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620003d357600080fd5b505af1158015620003e8573d6000803e3d6000fd5b5050601d546040516371dcf17d60e11b81526001600160a01b03909116925063e3b9e2fa9150666a94d74f43000090620004299061010290600401620010fa565b6000604051808303818588803b1580156200044357600080fd5b505af115801562000458573d6000803e3d6000fd5b5050601d5460405163ca8ac8f760e01b81526101026004820152620004e594506001600160a01b03909116925063ca8ac8f79150602401600060405180830381865afa158015620004ad573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620004d79190810190620012d9565b516020015151600162000cf7565b601d54604051633b89586760e01b815262000571916001600160a01b031690633b895867906200051c9061010290600401620010fa565b600060405180830381865afa1580156200053a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200056491908101906200139c565b6020015151600162000cf7565b601d54604051633b89586760e01b8152620005f9916001600160a01b031690633b89586790620005a89061010290600401620010fa565b600060405180830381865afa158015620005c6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620005f091908101906200139c565b51600162000cf7565b601d5460405163586511f560e11b8152600160048201526101026024820152620006a5916001600160a01b03169063b0ca23ea90604401600060405180830381865afa1580156200064e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200067891908101906200144a565b6000815181106200068d576200068d620015cb565b60200260200101516040015160000151600162000cf7565b565b6060600d8054806020026020016040519081016040528092919081815260200182805480156200070157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620006e2575b5050505050905090565b6060600f80548060200260200160405190810160405280929190818152602001828054801562000701576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620006e2575050505050905090565b6060600e80548060200260200160405190810160405280929190818152602001828054801562000701576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620006e2575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b82821015620008b95760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620008a057602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620008615790505b50505050508152505081526020019060010190620007f3565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b82821015620008b95783829060005260206000200180546200090890620015e1565b80601f01602080910402602001604051908101604052809291908181526020018280546200093690620015e1565b8015620009875780601f106200095b5761010080835404028352916020019162000987565b820191906000526020600020905b8154815290600101906020018083116200096957829003601f168201915b505050505081526020019060010190620008e6565b60606013805480602002602001604051908101604052809291908181526020016000905b82821015620008b95760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000a6d57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000a2e5790505b50505050508152505081526020019060010190620009c0565b60606010805480602002602001604051908101604052809291908181526020016000905b82821015620008b957838290600052602060002001805462000acc90620015e1565b80601f016020809104026020016040519081016040528092919081815260200182805462000afa90620015e1565b801562000b4b5780601f1062000b1f5761010080835404028352916020019162000b4b565b820191906000526020600020905b81548152906001019060200180831162000b2d57829003601f168201915b50505050508152602001906001019062000aaa565b60008054610100900460ff161562000b815750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000c905760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000c12917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016200161d565b60408051601f198184030181529082905262000c2e9162001650565b6000604051808303816000865af19150503d806000811462000c6d576040519150601f19603f3d011682016040523d82523d6000602084013e62000c72565b606091505b509150508080602001905181019062000c8c91906200166e565b9150505b919050565b6060600c80548060200260200160405190810160405280929190818152602001828054801562000701576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620006e2575050505050905090565b80821462000e22577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000d6a9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a162000e2262000e26565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000f285760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262000ec392916020016200161d565b60408051601f198184030181529082905262000edf9162001650565b6000604051808303816000865af19150503d806000811462000f1e576040519150601f19603f3d011682016040523d82523d6000602084013e62000f23565b606091505b505050505b6000805461ff001916610100179055565b611c4e806200169a83390190565b6020808252825182820181905260009190848201906040850190845b8181101562000f8a5783516001600160a01b03168352928401929184019160010162000f63565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200103e57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620010285783516001600160e01b0319168252928b019260019290920191908b019062000ffc565b50978a0197955050509187019160010162000fbe565b50919998505050505050505050565b60005b838110156200106a57818101518382015260200162001050565b83811115620003735750506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015620010ed57878503603f1901845281518051808752620010cd818989018a85016200104d565b601f01601f191695909501860194509285019290850190600101620010a3565b5092979650505050505050565b604080825260059082015264626c6f636b60d81b6060820152602081019190915260800190565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156200115d576200115d62001121565b60405290565b6040516060810167ffffffffffffffff811182821017156200115d576200115d62001121565b60405160a0810167ffffffffffffffff811182821017156200115d576200115d62001121565b604051601f8201601f1916810167ffffffffffffffff81118282101715620011db57620011db62001121565b604052919050565b600067ffffffffffffffff82111562001200576200120062001121565b5060051b60200190565b6000604082840312156200121d57600080fd5b6200122762001137565b90508151815260208083015167ffffffffffffffff8111156200124957600080fd5b8301601f810185136200125b57600080fd5b8051620012726200126c82620011e3565b620011af565b81815260059190911b820183019083810190878311156200129257600080fd5b928401925b82841015620012c95783516001600160a01b0381168114620012b95760008081fd5b8252928401929084019062001297565b8085870152505050505092915050565b600060208284031215620012ec57600080fd5b815167ffffffffffffffff808211156200130557600080fd5b90830190606082860312156200131a57600080fd5b6200132462001163565b8251828111156200133457600080fd5b62001342878286016200120a565b8252506020830151828111156200135857600080fd5b62001366878286016200120a565b6020830152506040830151828111156200137f57600080fd5b6200138d878286016200120a565b60408301525095945050505050565b600060208284031215620013af57600080fd5b815167ffffffffffffffff811115620013c757600080fd5b620013d5848285016200120a565b949350505050565b600082601f830112620013ef57600080fd5b815167ffffffffffffffff8111156200140c576200140c62001121565b62001421601f8201601f1916602001620011af565b8181528460208386010111156200143757600080fd5b620013d58260208301602087016200104d565b600060208083850312156200145e57600080fd5b825167ffffffffffffffff808211156200147757600080fd5b818501915085601f8301126200148c57600080fd5b81516200149d6200126c82620011e3565b81815260059190911b83018401908481019088831115620014bd57600080fd5b8585015b83811015620015be57805185811115620014da57600080fd5b860160a0818c03601f19011215620014f25760008081fd5b620014fc62001189565b88820151878111156200150f5760008081fd5b6200151f8d8b83860101620013dd565b8252506040808301518a83015260608084015189811115620015415760008081fd5b620015518f8d838801016200120a565b83850152506080915081840151898111156200156d5760008081fd5b6200157d8f8d838801016200120a565b82850152505060a083015188811115620015975760008081fd5b620015a78e8c838701016200120a565b9183019190915250845250918601918601620014c1565b5098975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680620015f657607f821691505b6020821081036200161757634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090620016428160048501602087016200104d565b919091016004019392505050565b60008251620016648184602087016200104d565b9190910192915050565b6000602082840312156200168157600080fd5b815180151581146200169257600080fd5b939250505056fe600560e081815264626c6f636b60d81b610100526080908152610120918252643830b832b960d91b6101405260a0919091526101a060405260086101609081526773636973736f727360c01b6101805260c0526200006290600490600362000077565b503480156200007057600080fd5b506200020f565b8260038101928215620000bc579160200282015b82811115620000bc5782518051620000ab918491602090910190620000ce565b50916020019190600101906200008b565b50620000ca92915062000159565b5090565b828054620000dc90620001d3565b90600052602060002090601f0160209004810192826200010057600085556200014b565b82601f106200011b57805160ff19168380011785556200014b565b828001600101855582156200014b579182015b828111156200014b5782518255916020019190600101906200012e565b50620000ca9291506200017a565b80821115620000ca57600062000170828262000191565b5060010162000159565b5b80821115620000ca57600081556001016200017b565b5080546200019f90620001d3565b6000825580601f10620001b0575050565b601f016020900490600052602060002090810190620001d091906200017a565b50565b600181811c90821680620001e857607f821691505b6020821081036200020957634e487b7160e01b600052602260045260246000fd5b50919050565b611a2f806200021f6000396000f3fe6080604052600436106100c25760003560e01c806391e706ea1161007f578063c0b57ffb11610059578063c0b57ffb14610262578063ca8ac8f714610292578063e3b9e2fa146102bf578063e9a734ff146102d457600080fd5b806391e706ea146101f3578063a59039e314610213578063b0ca23ea1461023557600080fd5b8063331a897d146100c75780633b895867146100fd57806362901b971461012a578063684908bd1461014c5780636b906d441461016c57806391cadabe146101c3575b600080fd5b3480156100d357600080fd5b506100e76100e236600461131b565b6102f4565b6040516100f49190611390565b60405180910390f35b34801561010957600080fd5b5061011d6101183660046113ec565b610522565b6040516100f49190611498565b34801561013657600080fd5b5061013f6105f8565b6040516100f491906114ea565b34801561015857600080fd5b506100e761016736600461131b565b610723565b34801561017857600080fd5b506101b56101873660046115a0565b6001602090815260009283526040909220815180830184018051928152908401929093019190912091525481565b6040519081526020016100f4565b3480156101cf57600080fd5b506101e36101de3660046115e7565b6107c3565b60405190151581526020016100f4565b3480156101ff57600080fd5b506101e361020e3660046113ec565b6108d9565b34801561021f57600080fd5b5061022861099b565b6040516100f49190611629565b34801561024157600080fd5b5061025561025036600461168b565b610b78565b6040516100f491906116ad565b34801561026e57600080fd5b5061028261027d366004611774565b610d35565b6040516100f4949392919061179d565b34801561029e57600080fd5b506102b26102ad36600461131b565b610dea565b6040516100f491906117cf565b6102d26102cd3660046113ec565b610fff565b005b3480156102e057600080fd5b506101e36102ef366004611830565b611189565b600081815260016020526040812060609182916004820160405161031891906118d4565b908152602001604051809103902060000154905060006001600086815260200190815260200160002060046001600381106103555761035561188a565b0160405161036391906118d4565b90815260408051602092819003830181205460008981526001909452918320919350610391906006906118d4565b90815260405190819003602001902054905081831180156103b157508083115b1561044c57600460005b0180546103c7906118a0565b80601f01602080910402602001604051908101604052809291908181526020018280546103f3906118a0565b80156104405780601f1061041557610100808354040283529160200191610440565b820191906000526020600020905b81548152906001019060200180831161042357829003601f168201915b50505050509350610518565b828211801561045a57508082115b1561046857600460016103bb565b828111801561047657508181115b1561048457600460026103bb565b828114801561049257508181145b156104c057604051806040016040528060098152602001687374616c656d61746560b81b8152509350610518565b818314806104cd57508083145b806104d757508082145b1561050557604051806040016040528060098152602001687374616c656d61746560b81b8152509350610518565b6040518060200160405280600081525093505b5091949350505050565b60408051808201909152600081526060602082015261054184846107c3565b61054a57600080fd5b600082815260016020526040908190209051610569908690869061196f565b908152602001604051809103902060405180604001604052908160008201548152602001600182018054806020026020016040519081016040528092919081815260200182805480156105e557602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105c7575b50505050508152505090505b9392505050565b61062560405180608001604052806000151581526020016000815260200160608152602001600081525090565b61065260405180608001604052806000151581526020016000815260200160608152602001600081525090565b33600081815260036020818152604083206001810154868301529390925290526002018054610680906118a0565b80601f01602080910402602001604051908101604052809291908181526020018280546106ac906118a0565b80156106f95780601f106106ce576101008083540402835291602001916106f9565b820191906000526020600020905b8154815290600101906020018083116106dc57829003601f168201915b50505050604080840192909252503360009081526003602081905291902001546060820152919050565b6004816003811061073357600080fd5b018054909150610742906118a0565b80601f016020809104026020016040519081016040528092919081815260200182805461076e906118a0565b80156107bb5780601f10610790576101008083540402835291602001916107bb565b820191906000526020600020905b81548152906001019060200180831161079e57829003601f168201915b505050505081565b6000805b60038110156108cd576108ac600482600381106107e6576107e661188a565b0180546107f2906118a0565b80601f016020809104026020016040519081016040528092919081815260200182805461081e906118a0565b801561086b5780601f106108405761010080835404028352916020019161086b565b820191906000526020600020905b81548152906001019060200180831161084e57829003601f168201915b505050505085858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061118992505050565b156108bb5760019150506108d3565b806108c581611995565b9150506107c7565b50600090505b92915050565b6000805b6000838152600160205260409081902090516108fc908790879061196f565b9081526040519081900360200190206001015481101561099057600083815260016020526040908190209051339190610938908890889061196f565b9081526020016040518091039020600101828154811061095a5761095a61188a565b6000918252602090912001546001600160a01b03160361097e5760009150506105f1565b8061098881611995565b9150506108dd565b506001949350505050565b60608060005b600254811015610b72576109d860405180608001604052806000151581526020016000815260200160608152602001600081525090565b6001815260028054600391600091859081106109f6576109f661188a565b60009182526020808320909101546001600160a01b031683528281019390935260409091018120600101549183019190915260028054600392919085908110610a4157610a4161188a565b60009182526020808320909101546001600160a01b0316835282019290925260400190206002018054610a73906118a0565b80601f0160208091040260200160405190810160405280929190818152602001828054610a9f906118a0565b8015610aec5780601f10610ac157610100808354040283529160200191610aec565b820191906000526020600020905b815481529060010190602001808311610acf57829003601f168201915b505050505081604001819052506003600060028481548110610b1057610b1061188a565b60009182526020808320909101546001600160a01b03168352820192909252604001902060030154606082015282518190849084908110610b5357610b5361188a565b6020026020010181905250508080610b6a90611995565b9150506109a1565b50919050565b60606000610b878460016119ae565b67ffffffffffffffff811115610b9f57610b9f6114fd565b604051908082528060200260200182016040528015610bd857816020015b610bc56111e2565b815260200190600190039081610bbd5790505b50905060005b848111610d2d576000610bf46102ad83876119c6565b9050610bfe6111e2565b81516040808301919091526020830151606083015282015160808201526000610c2a6100e285896119c6565b90506000610c476001610c3d878b6119c6565b6100e291906119c6565b9050610c538282611189565b8015610c875750610c8582604051806040016040528060098152602001687374616c656d61746560b81b815250611189565b155b8015610cbb5750610cb981604051806040016040528060098152602001687374616c656d61746560b81b815250611189565b155b15610ce2576040805180820190915260048152636472617760e01b60208201528352610ce6565b8183525b610cf085896119c6565b602084015285518390879087908110610d0b57610d0b61188a565b6020026020010181905250505050508080610d2590611995565b915050610bde565b509392505050565b60036020526000908152604090208054600182015460028301805460ff909316939192610d61906118a0565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8d906118a0565b8015610dda5780601f10610daf57610100808354040283529160200191610dda565b820191906000526020600020905b815481529060010190602001808311610dbd57829003601f168201915b5050505050908060030154905084565b610df2611261565b610dfa611261565b600083815260016020526040812090600401604051610e1991906118d4565b90815260200160405180910390206040518060400160405290816000820154815260200160018201805480602002602001604051908101604052809291908181526020018280548015610e9557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e77575b505050919092525050508152600083815260016020526040908190209051610ebf906005906118d4565b90815260200160405180910390206040518060400160405290816000820154815260200160018201805480602002602001604051908101604052809291908181526020018280548015610f3b57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610f1d575b5050509190925250505060208083019190915260008481526001909152604090206004600201604051610f6e91906118d4565b90815260200160405180910390206040518060400160405290816000820154815260200160018201805480602002602001604051908101604052809291908181526020018280548015610fea57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610fcc575b50505091909252505050604082015292915050565b436000541461100d57436000555b61101783836107c3565b61102057600080fd5b61102b8383836108d9565b61103457600080fd5b6001806000838152602001908152602001600020848460405161105892919061196f565b9081526020016040518091039020600001600082825461107891906119ae565b909155505060008181526001602052604090819020905161109c908590859061196f565b908152604080516020928190038301902060019081018054918201815560009081528381209091018054336001600160a01b031990911681179091558152600390925290205460ff1661112c57600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b031916331790555b336000908152600360205260409020805460ff191660019081178255810182905561115b906002018484611282565b5033600090815260036020819052604082200180546001929061117f9084906119ae565b9091555050505050565b60008160405160200161119c91906119dd565b60405160208183030381529060405280519060200120836040516020016111c391906119dd565b6040516020818303038152906040528051906020012014905092915050565b6040518060a001604052806060815260200160008152602001611218604051806040016040528060008152602001606081525090565b815260200161123a604051806040016040528060008152602001606081525090565b815260200161125c604051806040016040528060008152602001606081525090565b905290565b6040805160a081019091526000606080830191825260808301528190611218565b82805461128e906118a0565b90600052602060002090601f0160209004810192826112b057600085556112f6565b82601f106112c95782800160ff198235161785556112f6565b828001600101855582156112f6579182015b828111156112f65782358255916020019190600101906112db565b50611302929150611306565b5090565b5b808211156113025760008155600101611307565b60006020828403121561132d57600080fd5b5035919050565b60005b8381101561134f578181015183820152602001611337565b8381111561135e576000848401525b50505050565b6000815180845261137c816020860160208601611334565b601f01601f19169290920160200192915050565b6020815260006105f16020830184611364565b60008083601f8401126113b557600080fd5b50813567ffffffffffffffff8111156113cd57600080fd5b6020830191508360208285010111156113e557600080fd5b9250929050565b60008060006040848603121561140157600080fd5b833567ffffffffffffffff81111561141857600080fd5b611424868287016113a3565b909790965060209590950135949350505050565b600060408301825184526020808401516040828701528281518085526060880191508383019450600092505b8083101561148d5784516001600160a01b03168252938301936001929092019190830190611464565b509695505050505050565b6020815260006105f16020830184611438565b8051151582526020810151602083015260006040820151608060408501526114d66080850182611364565b606093840151949093019390935250919050565b6020815260006105f160208301846114ab565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261152457600080fd5b813567ffffffffffffffff8082111561153f5761153f6114fd565b604051601f8301601f19908116603f01168101908282118183101715611567576115676114fd565b8160405283815286602085880101111561158057600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156115b357600080fd5b82359150602083013567ffffffffffffffff8111156115d157600080fd5b6115dd85828601611513565b9150509250929050565b600080602083850312156115fa57600080fd5b823567ffffffffffffffff81111561161157600080fd5b61161d858286016113a3565b90969095509350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561167e57603f1988860301845261166c8583516114ab565b94509285019290850190600101611650565b5092979650505050505050565b6000806040838503121561169e57600080fd5b50508035926020909101359150565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561176657603f19898403018552815160a081518186526116fa82870182611364565b9150508882015189860152878201518582038987015261171a8282611438565b915050606080830151868303828801526117348382611438565b92505050608080830151925085820381870152506117528183611438565b9689019694505050908601906001016116d4565b509098975050505050505050565b60006020828403121561178657600080fd5b81356001600160a01b03811681146105f157600080fd5b84151581528360208201526080604082015260006117be6080830185611364565b905082606083015295945050505050565b6020815260008251606060208401526117eb6080840182611438565b90506020840151601f19808584030160408601526118098383611438565b92506040860151915080858403016060860152506118278282611438565b95945050505050565b6000806040838503121561184357600080fd5b823567ffffffffffffffff8082111561185b57600080fd5b61186786838701611513565b9350602085013591508082111561187d57600080fd5b506115dd85828601611513565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806118b457607f821691505b602082108103610b7257634e487b7160e01b600052602260045260246000fd5b600080835481600182811c9150808316806118f057607f831692505b6020808410820361190f57634e487b7160e01b86526022600452602486fd5b818015611923576001811461193457611961565b60ff19861689528489019650611961565b60008a81526020902060005b868110156119595781548b820152908501908301611940565b505084890196505b509498975050505050505050565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b6000600182016119a7576119a761197f565b5060010190565b600082198211156119c1576119c161197f565b500190565b6000828210156119d8576119d861197f565b500390565b600082516119ef818460208701611334565b919091019291505056fea2646970667358221220a5d86ce1a2f0d75fd68074b6aa9337477c4a74eb365d70f33a6d5f53c8d7a58664736f6c634300080d0033a2646970667358221220b2791bfdd62fa6898e385cbf83dfeedd7c2d275b876dae6e97d2d925fe46407e64736f6c634300080d0033",
    "sourceMap": "152:895:18:-:0;;;1572:26:1;;;-1:-1:-1;;1572:26:1;;;1594:4;1572:26;;;;;;3288:44:4;;;;;;;;;;;220:30:18;;;-1:-1:-1;;;;;;220:30:18;242:7;220:30;;;152:895;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "152:895:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;450:193;;;:::i;:::-;;647:398;;;:::i;2161:134:7:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;416:29:18;;;;;-1:-1:-1;;;;;416:29:18;;;;;;-1:-1:-1;;;;;867:32:19;;;849:51;;837:2;822:18;416:29:18;677:229:19;2930:133:7;;;:::i;2631:141::-;;;:::i;2447:178::-;;;:::i;:::-;;;;;;;:::i;2301:140::-;;;:::i;:::-;;;;;;;:::i;196:20:18:-;;;;;-1:-1:-1;;;;;196:20:18;;;2778:146:7;;;:::i;1866:141::-;;;:::i;1819:584:1:-;;;:::i;:::-;;;4125:14:19;;4118:22;4100:41;;4088:2;4073:18;1819:584:1;3960:187:19;2013:142:7;;;:::i;1572:26:1:-;;;;;;;;;450:193:18;480:5;:18;;-1:-1:-1;;;;;;480:18:18;488:10;480:18;;;504:59;;;-1:-1:-1;;;504:59:18;;521:4;504:59;;;4364:51:19;4431:18;;;4424:30;;;;4446:2;4470:18;;;4463:30;4529:34;4509:18;;;4502:62;504:8:18;;;;4581:19:19;;504:59:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;575:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;569:3:18;:30;;-1:-1:-1;;;;;;569:30:18;-1:-1:-1;;;;;569:30:18;;;;;;621:3;;605:33;;-1:-1:-1;;;605:33:18;;621:3;;605:33;;;4814:51:19;627:10:18;4881:18:19;;;4874:34;605:7:18;;;;4787:18:19;;605:33:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;450:193::o;647:398::-;711:3;;694:22;;-1:-1:-1;;;694:22:18;;-1:-1:-1;;;;;711:3:18;;;694:22;;;849:51:19;694:8:18;;;;822:18:19;;694:22:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;722:3:18;;:48;;-1:-1:-1;;;722:48:18;;-1:-1:-1;;;;;722:3:18;;;;-1:-1:-1;722:12:18;;-1:-1:-1;742:13:18;;722:48;;766:3;;722:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;786:3:18;;:27;;-1:-1:-1;;;786:27:18;;809:3;786:27;;;5492:25:19;777:65:18;;-1:-1:-1;;;;;;786:3:18;;;;-1:-1:-1;786:22:18;;-1:-1:-1;5465:18:19;;786:27:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;786:27:18;;;;;;;;;;;;:::i;:::-;:38;:45;;;:52;840:1;777:8;:65::i;:::-;857:3;;:37;;-1:-1:-1;;;857:37:18;;848:64;;-1:-1:-1;;;;;857:3:18;;:23;;:37;;890:3;;857:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;857:37:18;;;;;;;;;;;;:::i;:::-;:44;;;:51;910:1;848:8;:64::i;:::-;927:3;;:37;;-1:-1:-1;;;927:37:18;;918:56;;-1:-1:-1;;;;;927:3:18;;:23;;:37;;960:3;;927:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;927:37:18;;;;;;;;;;;;:::i;:::-;:43;972:1;918:8;:56::i;:::-;989:3;;:27;;-1:-1:-1;;;989:27:18;;:3;:27;;;9591:25:19;1012:3:18;9632:18:19;;;9625:34;980:60:18;;-1:-1:-1;;;;;989:3:18;;:19;;9564:18:19;;989:27:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;989:27:18;;;;;;;;;;;;:::i;:::-;1017:1;989:30;;;;;;;;:::i;:::-;;;;;;;:41;;;:47;;;1038:1;980:8;:60::i;:::-;647:398::o;2161:134:7:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:7;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;2930:133::-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:7;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:7;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2447:178::-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2301:140::-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:141;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:1;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:1;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;4814:51:19;;;-1:-1:-1;;;4881:18:19;;;4874:34;2196:43:1;;;;;;;;;4787:18:19;;;2196:43:1;;;-1:-1:-1;;1671:64:1;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:1;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:1:o;2013:142:7:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:7;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;5209:262:1:-;5271:1;5266;:6;5262:203;;5293:41;;;;;14603:2:19;14585:21;;;14642:2;14622:18;;;14615:30;14681:34;14676:2;14661:18;;14654:62;-1:-1:-1;;;14747:2:19;14732:18;;14725:32;14789:3;14774:19;;14401:398;5293:41:1;;;;;;;;5353:31;;;15016:21:19;;;15073:2;15053:18;;;15046:30;-1:-1:-1;;;15107:2:19;15092:18;;15085:40;15192:4;15177:20;;15170:36;;;5353:31:1;;;;;;;15157:3:19;5353:31:1;;;5403;;;15429:21:19;;;15486:2;15466:18;;;15459:30;-1:-1:-1;;;15520:2:19;15505:18;;15498:40;15605:4;15590:20;;15583:36;;;5403:31:1;;;;;;;15570:3:19;5403:31:1;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;2409:432::-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;15832:51:19;;;-1:-1:-1;;;15899:18:19;;;15892:34;;;;2712:4:1;15942:18:19;;;15935:34;2489:11:1;;1671:64;2586:43;;15805:18:19;;2652:67:1;;;-1:-1:-1;;2652:67:1;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:1;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:1;2820:7;:14;;-1:-1:-1;;2820:14:1;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;14:658:19:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:19;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:19;;14:658;-1:-1:-1;;;;;;14:658:19:o;911:1567::-;1113:4;1142:2;1182;1171:9;1167:18;1212:2;1201:9;1194:21;1235:6;1270;1264:13;1301:6;1293;1286:22;1327:2;1317:12;;1360:2;1349:9;1345:18;1338:25;;1422:2;1412:6;1409:1;1405:14;1394:9;1390:30;1386:39;1460:2;1452:6;1448:15;1481:1;1502;1512:937;1528:6;1523:3;1520:15;1512:937;;;1597:22;;;-1:-1:-1;;1593:36:19;1581:49;;1653:13;;1740:9;;-1:-1:-1;;;;;1736:35:19;1721:51;;1811:11;;1805:18;1843:15;;;1836:27;;;1924:19;;1693:15;;;1956:24;;;2046:21;;;;2091:1;;2014:2;2002:15;;;2105:236;2121:8;2116:3;2113:17;2105:236;;;2202:15;;-1:-1:-1;;;;;;2198:42:19;2184:57;;2310:17;;;;2149:1;2140:11;;;;;2267:14;;;;2105:236;;;-1:-1:-1;2427:12:19;;;;2364:5;-1:-1:-1;;;2392:15:19;;;;1554:1;1545:11;1512:937;;;-1:-1:-1;2466:6:19;;911:1567;-1:-1:-1;;;;;;;;;911:1567:19:o;2483:258::-;2555:1;2565:113;2579:6;2576:1;2573:13;2565:113;;;2655:11;;;2649:18;2636:11;;;2629:39;2601:2;2594:10;2565:113;;;2696:6;2693:1;2690:13;2687:48;;;-1:-1:-1;;2731:1:19;2713:16;;2706:27;2483:258::o;2746:1001::-;2908:4;2937:2;2977;2966:9;2962:18;3007:2;2996:9;2989:21;3030:6;3065;3059:13;3096:6;3088;3081:22;3134:2;3123:9;3119:18;3112:25;;3196:2;3186:6;3183:1;3179:14;3168:9;3164:30;3160:39;3146:53;;3234:2;3226:6;3222:15;3255:1;3265:453;3279:6;3276:1;3273:13;3265:453;;;3344:22;;;-1:-1:-1;;3340:36:19;3328:49;;3400:13;;3442:9;;3464:24;;;3501:61;3442:9;3536:15;;;3523:11;;;3501:61;:::i;:::-;3628:2;3605:17;-1:-1:-1;;3601:31:19;3589:44;;;;3585:53;;;-1:-1:-1;3696:12:19;;;;3661:15;;;;3301:1;3294:9;3265:453;;;-1:-1:-1;3735:6:19;;2746:1001;-1:-1:-1;;;;;;;2746:1001:19:o;4919:412::-;5159:2;5141:21;;;5198:1;5178:18;;;5171:29;-1:-1:-1;;;5231:2:19;5216:18;;5209:35;5311:4;5296:20;;5289:36;;;;5276:3;5261:19;;4919:412::o;5528:127::-;5589:10;5584:3;5580:20;5577:1;5570:31;5620:4;5617:1;5610:15;5644:4;5641:1;5634:15;5660:257;5732:4;5726:11;;;5764:17;;5811:18;5796:34;;5832:22;;;5793:62;5790:88;;;5858:18;;:::i;:::-;5894:4;5887:24;5660:257;:::o;5922:253::-;5994:2;5988:9;6036:4;6024:17;;6071:18;6056:34;;6092:22;;;6053:62;6050:88;;;6118:18;;:::i;6180:253::-;6252:2;6246:9;6294:4;6282:17;;6329:18;6314:34;;6350:22;;;6311:62;6308:88;;;6376:18;;:::i;6438:275::-;6509:2;6503:9;6574:2;6555:13;;-1:-1:-1;;6551:27:19;6539:40;;6609:18;6594:34;;6630:22;;;6591:62;6588:88;;;6656:18;;:::i;:::-;6692:2;6685:22;6438:275;;-1:-1:-1;6438:275:19:o;6718:183::-;6778:4;6811:18;6803:6;6800:30;6797:56;;;6833:18;;:::i;:::-;-1:-1:-1;6878:1:19;6874:14;6890:4;6870:25;;6718:183::o;6906:1133::-;6969:5;7017:4;7005:9;7000:3;6996:19;6992:30;6989:50;;;7035:1;7032;7025:12;6989:50;7057:22;;:::i;:::-;7048:31;;7108:9;7102:16;7095:5;7088:31;7138:2;7184;7173:9;7169:18;7163:25;7211:18;7203:6;7200:30;7197:50;;;7243:1;7240;7233:12;7197:50;7266:22;;7319:4;7311:13;;7307:23;-1:-1:-1;7297:51:19;;7344:1;7341;7334:12;7297:51;7373:2;7367:9;7396:60;7412:43;7452:2;7412:43;:::i;:::-;7396:60;:::i;:::-;7490:15;;;7572:1;7568:10;;;;7560:19;;7556:28;;;7521:12;;;;7596:15;;;7593:35;;;7624:1;7621;7614:12;7593:35;7648:11;;;;7668:327;7684:6;7679:3;7676:15;7668:327;;;7753:10;;-1:-1:-1;;;;;7798:33:19;;7786:46;;7776:144;;7874:1;7903:2;7899;7892:14;7776:144;7933:20;;7701:12;;;;7973;;;;7668:327;;;8027:5;8022:2;8015:5;8011:14;8004:29;;;;;;6906:1133;;;;:::o;8044:992::-;8142:6;8195:2;8183:9;8174:7;8170:23;8166:32;8163:52;;;8211:1;8208;8201:12;8163:52;8244:9;8238:16;8273:18;8314:2;8306:6;8303:14;8300:34;;;8330:1;8327;8320:12;8300:34;8353:22;;;;8409:4;8391:16;;;8387:27;8384:47;;;8427:1;8424;8417:12;8384:47;8453:22;;:::i;:::-;8506:2;8500:9;8534:2;8524:8;8521:16;8518:36;;;8550:1;8547;8540:12;8518:36;8577:62;8631:7;8620:8;8616:2;8612:17;8577:62;:::i;:::-;8570:5;8563:77;;8679:2;8675;8671:11;8665:18;8708:2;8698:8;8695:16;8692:36;;;8724:1;8721;8714:12;8692:36;8760:62;8814:7;8803:8;8799:2;8795:17;8760:62;:::i;:::-;8755:2;8748:5;8744:14;8737:86;;8862:2;8858;8854:11;8848:18;8891:2;8881:8;8878:16;8875:36;;;8907:1;8904;8897:12;8875:36;8943:62;8997:7;8986:8;8982:2;8978:17;8943:62;:::i;:::-;8938:2;8927:14;;8920:86;-1:-1:-1;8931:5:19;8044:992;-1:-1:-1;;;;;8044:992:19:o;9041:353::-;9131:6;9184:2;9172:9;9163:7;9159:23;9155:32;9152:52;;;9200:1;9197;9190:12;9152:52;9233:9;9227:16;9266:18;9258:6;9255:30;9252:50;;;9298:1;9295;9288:12;9252:50;9321:67;9380:7;9371:6;9360:9;9356:22;9321:67;:::i;:::-;9311:77;9041:353;-1:-1:-1;;;;9041:353:19:o;9670:497::-;9724:5;9777:3;9770:4;9762:6;9758:17;9754:27;9744:55;;9795:1;9792;9785:12;9744:55;9824:6;9818:13;9850:18;9846:2;9843:26;9840:52;;;9872:18;;:::i;:::-;9916:55;9959:2;9940:13;;-1:-1:-1;;9936:27:19;9965:4;9932:38;9916:55;:::i;:::-;9996:2;9987:7;9980:19;10042:3;10035:4;10030:2;10022:6;10018:15;10014:26;10011:35;10008:55;;;10059:1;10056;10049:12;10008:55;10072:64;10133:2;10126:4;10117:7;10113:18;10106:4;10098:6;10094:17;10072:64;:::i;10172:2491::-;10306:6;10337:2;10380;10368:9;10359:7;10355:23;10351:32;10348:52;;;10396:1;10393;10386:12;10348:52;10429:9;10423:16;10458:18;10499:2;10491:6;10488:14;10485:34;;;10515:1;10512;10505:12;10485:34;10553:6;10542:9;10538:22;10528:32;;10598:7;10591:4;10587:2;10583:13;10579:27;10569:55;;10620:1;10617;10610:12;10569:55;10649:2;10643:9;10672:60;10688:43;10728:2;10688:43;:::i;10672:60::-;10766:15;;;10848:1;10844:10;;;;10836:19;;10832:28;;;10797:12;;;;10872:19;;;10869:39;;;10904:1;10901;10894:12;10869:39;10936:2;10932;10928:11;10948:1685;10964:6;10959:3;10956:15;10948:1685;;;11043:3;11037:10;11079:2;11066:11;11063:19;11060:39;;;11095:1;11092;11085:12;11060:39;11122:20;;11194:4;11166:16;;;-1:-1:-1;;11162:30:19;11158:41;11155:131;;;11240:1;11269:2;11265;11258:14;11155:131;11312:22;;:::i;:::-;11377:2;11373;11369:11;11363:18;11410:2;11400:8;11397:16;11394:106;;;11454:1;11483:2;11479;11472:14;11394:106;11527:65;11584:7;11579:2;11568:8;11564:2;11560:17;11556:26;11527:65;:::i;:::-;11520:5;11513:80;;11616:2;11668;11664;11660:11;11654:18;11649:2;11642:5;11638:14;11631:42;11696:2;11741;11737;11733:11;11727:18;11774:2;11764:8;11761:16;11758:109;;;11819:1;11849:3;11844;11837:16;11758:109;11903:71;11966:7;11961:2;11950:8;11946:2;11942:17;11938:26;11903:71;:::i;:::-;11898:2;11891:5;11887:14;11880:95;;11999:3;11988:14;;12045:3;12041:2;12037:12;12031:19;12079:2;12069:8;12066:16;12063:109;;;12124:1;12154:3;12149;12142:16;12063:109;12208:71;12271:7;12266:2;12255:8;12251:2;12247:17;12243:26;12208:71;:::i;:::-;12203:2;12196:5;12192:14;12185:95;;;12323:4;12319:2;12315:13;12309:20;12358:2;12348:8;12345:16;12342:109;;;12403:1;12433:3;12428;12421:16;12342:109;12488:71;12551:7;12546:2;12535:8;12531:2;12527:17;12523:26;12488:71;:::i;:::-;12471:15;;;12464:96;;;;-1:-1:-1;12573:18:19;;-1:-1:-1;12611:12:19;;;;10981;;10948:1685;;;-1:-1:-1;12652:5:19;10172:2491;-1:-1:-1;;;;;;;;10172:2491:19:o;12668:127::-;12729:10;12724:3;12720:20;12717:1;12710:31;12760:4;12757:1;12750:15;12784:4;12781:1;12774:15;12800:380;12879:1;12875:12;;;;12922;;;12943:61;;12997:4;12989:6;12985:17;12975:27;;12943:61;13050:2;13042:6;13039:14;13019:18;13016:38;13013:161;;13096:10;13091:3;13087:20;13084:1;13077:31;13131:4;13128:1;13121:15;13159:4;13156:1;13149:15;13013:161;;12800:380;;;:::o;13464:371::-;-1:-1:-1;;;;;;13649:33:19;;13637:46;;13706:13;;13619:3;;13728:61;13706:13;13778:1;13769:11;;13762:4;13750:17;;13728:61;:::i;:::-;13809:16;;;;13827:1;13805:24;;13464:371;-1:-1:-1;;;13464:371:19:o;13840:274::-;13969:3;14007:6;14001:13;14023:53;14069:6;14064:3;14057:4;14049:6;14045:17;14023:53;:::i;:::-;14092:16;;;;;13840:274;-1:-1:-1;;13840:274:19:o;14119:277::-;14186:6;14239:2;14227:9;14218:7;14214:23;14210:32;14207:52;;;14255:1;14252;14245:12;14207:52;14287:9;14281:16;14340:5;14333:13;14326:21;14319:5;14316:32;14306:60;;14362:1;14359;14352:12;14306:60;14385:5;14119:277;-1:-1:-1;;;14119:277:19:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "BPS()": "249d39e9",
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "owner()": "8da5cb5b",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testCastVoteAndGetters()": "0bfc0194"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BPS\",\"outputs\":[{\"internalType\":\"contract BlockPaperScissors\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCastVoteAndGetters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/BlockPaperScissors.t.sol\":\"TestBlockPaperScissors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/BlockPaperScissors.sol\":{\"keccak256\":\"0x66a53b0018f87eb841cc3b6d766568666cd202da1847b9642169c4c01d5eb219\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://16c88e380b3b49b9ee6e71be4a3c2c65c692019be4bd915cc5a4b00b179ea90e\",\"dweb:/ipfs/QmTU2Pfy65CJPixp5A4RppSLNkbCuwaoim3SncxpXAwT7s\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749\",\"dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af\",\"dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17\",\"dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa9a389ae870e108986d72d760a792d011516a7091ab48da20a5982f8ae2e2575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6de722b90ec6b39fe65e121db1735234c8a123fd7bee0ed5daa646b0e6e14a5\",\"dweb:/ipfs/QmQfrW7sP3snKdoxtEVWh5CAxApwhBs6uLvDhiJLTza1Lp\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x4ba6040f75ea4425c4cf5f77a8ea99f3a7a0fcb5bf13d0186d0952cf505b8203\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://363bd98c4de695b34709e318213b2955d8a493d0249857701c05966c81341b10\",\"dweb:/ipfs/QmdtS71RFemQhq8WYT3WP5UQ4FAsCnaw2JbiPJ3vTUYYRu\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"test/BlockPaperScissors.t.sol\":{\"keccak256\":\"0x200eff6c695e2d9f693cf773299a901819bba1fd9de1fabdd6084280a83b1c6d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b22e52e8ac10304de698accf34723b73aca9326be5c197b3df6807e130b0af79\",\"dweb:/ipfs/QmVFUPWSzUhPfKqBoFMv7FH7RWEqAenA6BxgSpovgUbYcG\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BPS",
          "outputs": [
            {
              "internalType": "contract BlockPaperScissors",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCastVoteAndGetters"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/BlockPaperScissors.t.sol": "TestBlockPaperScissors"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/BlockPaperScissors.sol": {
        "keccak256": "0x66a53b0018f87eb841cc3b6d766568666cd202da1847b9642169c4c01d5eb219",
        "urls": [
          "bzz-raw://16c88e380b3b49b9ee6e71be4a3c2c65c692019be4bd915cc5a4b00b179ea90e",
          "dweb:/ipfs/QmTU2Pfy65CJPixp5A4RppSLNkbCuwaoim3SncxpXAwT7s"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154",
        "urls": [
          "bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749",
          "dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
        "urls": [
          "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
          "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b",
        "urls": [
          "bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17",
          "dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa9a389ae870e108986d72d760a792d011516a7091ab48da20a5982f8ae2e2575",
        "urls": [
          "bzz-raw://d6de722b90ec6b39fe65e121db1735234c8a123fd7bee0ed5daa646b0e6e14a5",
          "dweb:/ipfs/QmQfrW7sP3snKdoxtEVWh5CAxApwhBs6uLvDhiJLTza1Lp"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x4ba6040f75ea4425c4cf5f77a8ea99f3a7a0fcb5bf13d0186d0952cf505b8203",
        "urls": [
          "bzz-raw://363bd98c4de695b34709e318213b2955d8a493d0249857701c05966c81341b10",
          "dweb:/ipfs/QmdtS71RFemQhq8WYT3WP5UQ4FAsCnaw2JbiPJ3vTUYYRu"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "test/BlockPaperScissors.t.sol": {
        "keccak256": "0x200eff6c695e2d9f693cf773299a901819bba1fd9de1fabdd6084280a83b1c6d",
        "urls": [
          "bzz-raw://b22e52e8ac10304de698accf34723b73aca9326be5c197b3df6807e130b0af79",
          "dweb:/ipfs/QmVFUPWSzUhPfKqBoFMv7FH7RWEqAenA6BxgSpovgUbYcG"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/BlockPaperScissors.t.sol",
    "id": 29223,
    "exportedSymbols": {
      "BlockPaperScissors": [
        724
      ],
      "DSTest": [
        2511
      ],
      "StdAssertions": [
        3985
      ],
      "StdChains": [
        4679
      ],
      "StdCheats": [
        6910
      ],
      "StdInvariant": [
        7200
      ],
      "StdStorage": [
        7950
      ],
      "StdStyle": [
        10594
      ],
      "StdUtils": [
        11401
      ],
      "Test": [
        11450
      ],
      "TestBase": [
        2571
      ],
      "TestBlockPaperScissors": [
        29222
      ],
      "Vm": [
        12762
      ],
      "console": [
        20826
      ],
      "console2": [
        28922
      ],
      "stdError": [
        6976
      ],
      "stdJson": [
        7776
      ],
      "stdMath": [
        7918
      ],
      "stdStorage": [
        9383
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1009:18",
    "nodes": [
      {
        "id": 29087,
        "nodeType": "PragmaDirective",
        "src": "39:24:18",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 29088,
        "nodeType": "ImportDirective",
        "src": "65:39:18",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "../lib/forge-std/src/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29223,
        "sourceUnit": 11451,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29089,
        "nodeType": "ImportDirective",
        "src": "105:45:18",
        "nodes": [],
        "absolutePath": "contracts/BlockPaperScissors.sol",
        "file": "../contracts/BlockPaperScissors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29223,
        "sourceUnit": 725,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29222,
        "nodeType": "ContractDefinition",
        "src": "152:895:18",
        "nodes": [
          {
            "id": 29093,
            "nodeType": "VariableDeclaration",
            "src": "196:20:18",
            "nodes": [],
            "constant": false,
            "functionSelector": "8da5cb5b",
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "211:5:18",
            "scope": 29222,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 29092,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "196:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29099,
            "nodeType": "VariableDeclaration",
            "src": "220:30:18",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "228:3:18",
            "scope": 29222,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 29094,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "220:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "30783132333435",
                  "id": 29097,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "242:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_74565_by_1",
                    "typeString": "int_const 74565"
                  },
                  "value": "0x12345"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_74565_by_1",
                    "typeString": "int_const 74565"
                  }
                ],
                "id": 29096,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "234:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 29095,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "234:7:18",
                  "typeDescriptions": {}
                }
              },
              "id": 29098,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "234:16:18",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 29105,
            "nodeType": "StructDefinition",
            "src": "255:59:18",
            "nodes": [],
            "canonicalName": "TestBlockPaperScissors.Votes",
            "members": [
              {
                "constant": false,
                "id": 29101,
                "mutability": "mutable",
                "name": "votes",
                "nameLocation": "282:5:18",
                "nodeType": "VariableDeclaration",
                "scope": 29105,
                "src": "274:13:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 29100,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "274:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29104,
                "mutability": "mutable",
                "name": "voters",
                "nameLocation": "303:6:18",
                "nodeType": "VariableDeclaration",
                "scope": 29105,
                "src": "293:16:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 29102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "293:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 29103,
                  "nodeType": "ArrayTypeName",
                  "src": "293:9:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Votes",
            "nameLocation": "262:5:18",
            "scope": 29222,
            "visibility": "public"
          },
          {
            "id": 29115,
            "nodeType": "StructDefinition",
            "src": "318:94:18",
            "nodes": [],
            "canonicalName": "TestBlockPaperScissors.VotesInBlock",
            "members": [
              {
                "constant": false,
                "id": 29108,
                "mutability": "mutable",
                "name": "blockVotes",
                "nameLocation": "350:10:18",
                "nodeType": "VariableDeclaration",
                "scope": 29115,
                "src": "344:16:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Votes_$29105_storage_ptr",
                  "typeString": "struct TestBlockPaperScissors.Votes"
                },
                "typeName": {
                  "id": 29107,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 29106,
                    "name": "Votes",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 29105,
                    "src": "344:5:18"
                  },
                  "referencedDeclaration": 29105,
                  "src": "344:5:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Votes_$29105_storage_ptr",
                    "typeString": "struct TestBlockPaperScissors.Votes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29111,
                "mutability": "mutable",
                "name": "paperVotes",
                "nameLocation": "372:10:18",
                "nodeType": "VariableDeclaration",
                "scope": 29115,
                "src": "366:16:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Votes_$29105_storage_ptr",
                  "typeString": "struct TestBlockPaperScissors.Votes"
                },
                "typeName": {
                  "id": 29110,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 29109,
                    "name": "Votes",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 29105,
                    "src": "366:5:18"
                  },
                  "referencedDeclaration": 29105,
                  "src": "366:5:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Votes_$29105_storage_ptr",
                    "typeString": "struct TestBlockPaperScissors.Votes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29114,
                "mutability": "mutable",
                "name": "scissorsVotes",
                "nameLocation": "394:13:18",
                "nodeType": "VariableDeclaration",
                "scope": 29115,
                "src": "388:19:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Votes_$29105_storage_ptr",
                  "typeString": "struct TestBlockPaperScissors.Votes"
                },
                "typeName": {
                  "id": 29113,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 29112,
                    "name": "Votes",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 29105,
                    "src": "388:5:18"
                  },
                  "referencedDeclaration": 29105,
                  "src": "388:5:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Votes_$29105_storage_ptr",
                    "typeString": "struct TestBlockPaperScissors.Votes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "VotesInBlock",
            "nameLocation": "325:12:18",
            "scope": 29222,
            "visibility": "public"
          },
          {
            "id": 29118,
            "nodeType": "VariableDeclaration",
            "src": "416:29:18",
            "nodes": [],
            "constant": false,
            "functionSelector": "249d39e9",
            "mutability": "mutable",
            "name": "BPS",
            "nameLocation": "442:3:18",
            "scope": 29222,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BlockPaperScissors_$724",
              "typeString": "contract BlockPaperScissors"
            },
            "typeName": {
              "id": 29117,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29116,
                "name": "BlockPaperScissors",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 724,
                "src": "416:18:18"
              },
              "referencedDeclaration": 724,
              "src": "416:18:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BlockPaperScissors_$724",
                "typeString": "contract BlockPaperScissors"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29154,
            "nodeType": "FunctionDefinition",
            "src": "450:193:18",
            "nodes": [],
            "body": {
              "id": 29153,
              "nodeType": "Block",
              "src": "474:169:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 29124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29121,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29093,
                      "src": "480:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 29122,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "488:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 29123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "488:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "480:18:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 29125,
                  "nodeType": "ExpressionStatement",
                  "src": "480:18:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29131,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "521:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestBlockPaperScissors_$29222",
                              "typeString": "contract TestBlockPaperScissors"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestBlockPaperScissors_$29222",
                              "typeString": "contract TestBlockPaperScissors"
                            }
                          ],
                          "id": 29130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "513:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 29129,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "513:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 29132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "513:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "426c6f636b506170657253636973736f7273207465737420636f6e7472616374",
                        "id": 29133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "528:34:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2544c445a2b3bb46149fa612d612f00378bb7e16a7590fb0c86d9dd7224639a",
                          "typeString": "literal_string \"BlockPaperScissors test contract\""
                        },
                        "value": "BlockPaperScissors test contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2544c445a2b3bb46149fa612d612f00378bb7e16a7590fb0c86d9dd7224639a",
                          "typeString": "literal_string \"BlockPaperScissors test contract\""
                        }
                      ],
                      "expression": {
                        "id": 29126,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2564,
                        "src": "504:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12762",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 29128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11840,
                      "src": "504:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 29134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "504:59:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29135,
                  "nodeType": "ExpressionStatement",
                  "src": "504:59:18"
                },
                {
                  "expression": {
                    "id": 29141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29136,
                      "name": "BPS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29118,
                      "src": "569:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BlockPaperScissors_$724",
                        "typeString": "contract BlockPaperScissors"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 29139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "575:22:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_BlockPaperScissors_$724_$",
                          "typeString": "function () returns (contract BlockPaperScissors)"
                        },
                        "typeName": {
                          "id": 29138,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 29137,
                            "name": "BlockPaperScissors",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 724,
                            "src": "579:18:18"
                          },
                          "referencedDeclaration": 724,
                          "src": "579:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BlockPaperScissors_$724",
                            "typeString": "contract BlockPaperScissors"
                          }
                        }
                      },
                      "id": 29140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "575:24:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BlockPaperScissors_$724",
                        "typeString": "contract BlockPaperScissors"
                      }
                    },
                    "src": "569:30:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BlockPaperScissors_$724",
                      "typeString": "contract BlockPaperScissors"
                    }
                  },
                  "id": 29142,
                  "nodeType": "ExpressionStatement",
                  "src": "569:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29148,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29099,
                            "src": "621:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 29147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "613:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 29146,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "613:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 29149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "613:12:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 29150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "627:10:18",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 29143,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2564,
                        "src": "605:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12762",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 29145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12492,
                      "src": "605:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 29151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "605:33:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29152,
                  "nodeType": "ExpressionStatement",
                  "src": "605:33:18"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "459:5:18",
            "parameters": {
              "id": 29119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "464:2:18"
            },
            "returnParameters": {
              "id": 29120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "474:0:18"
            },
            "scope": 29222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29221,
            "nodeType": "FunctionDefinition",
            "src": "647:398:18",
            "nodes": [],
            "body": {
              "id": 29220,
              "nodeType": "Block",
              "src": "688:357:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29162,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29099,
                            "src": "711:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 29161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "703:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 29160,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "703:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 29163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "703:12:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 29157,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2564,
                        "src": "694:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12762",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 29159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12463,
                      "src": "694:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 29164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "694:22:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29165,
                  "nodeType": "ExpressionStatement",
                  "src": "694:22:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "626c6f636b",
                        "id": 29171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "757:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20b53acf0daefc8c6ad68c861fb3b543ca541abd101abc1edfcbf6606b838ef4",
                          "typeString": "literal_string \"block\""
                        },
                        "value": "block"
                      },
                      {
                        "hexValue": "323538",
                        "id": 29172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "766:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_258_by_1",
                          "typeString": "int_const 258"
                        },
                        "value": "258"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_20b53acf0daefc8c6ad68c861fb3b543ca541abd101abc1edfcbf6606b838ef4",
                          "typeString": "literal_string \"block\""
                        },
                        {
                          "typeIdentifier": "t_rational_258_by_1",
                          "typeString": "int_const 258"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_20b53acf0daefc8c6ad68c861fb3b543ca541abd101abc1edfcbf6606b838ef4",
                            "typeString": "literal_string \"block\""
                          },
                          {
                            "typeIdentifier": "t_rational_258_by_1",
                            "typeString": "int_const 258"
                          }
                        ],
                        "expression": {
                          "id": 29166,
                          "name": "BPS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29118,
                          "src": "722:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BlockPaperScissors_$724",
                            "typeString": "contract BlockPaperScissors"
                          }
                        },
                        "id": 29168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "castVote",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 164,
                        "src": "722:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                          "typeString": "function (string memory,uint256) payable external"
                        }
                      },
                      "id": 29170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3330303030303030",
                          "id": 29169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "742:13:18",
                          "subdenomination": "gwei",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30000000000000000_by_1",
                            "typeString": "int_const 30000000000000000"
                          },
                          "value": "30000000"
                        }
                      ],
                      "src": "722:34:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_string_memory_ptr_$_t_uint256_$returns$__$value",
                        "typeString": "function (string memory,uint256) payable external"
                      }
                    },
                    "id": 29173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "722:48:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29174,
                  "nodeType": "ExpressionStatement",
                  "src": "722:48:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "323538",
                                  "id": 29178,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "809:3:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_258_by_1",
                                    "typeString": "int_const 258"
                                  },
                                  "value": "258"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_258_by_1",
                                    "typeString": "int_const 258"
                                  }
                                ],
                                "expression": {
                                  "id": 29176,
                                  "name": "BPS",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29118,
                                  "src": "786:3:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BlockPaperScissors_$724",
                                    "typeString": "contract BlockPaperScissors"
                                  }
                                },
                                "id": 29177,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "totalVotesForBlock",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 238,
                                "src": "786:22:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_VotesInBlock_$17_memory_ptr_$",
                                  "typeString": "function (uint256) view external returns (struct BlockPaperScissors.VotesInBlock memory)"
                                }
                              },
                              "id": 29179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "786:27:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VotesInBlock_$17_memory_ptr",
                                "typeString": "struct BlockPaperScissors.VotesInBlock memory"
                              }
                            },
                            "id": 29180,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "blockVotes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10,
                            "src": "786:38:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Votes_$7_memory_ptr",
                              "typeString": "struct BlockPaperScissors.Votes memory"
                            }
                          },
                          "id": 29181,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "voters",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6,
                          "src": "786:45:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 29182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "786:52:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 29183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "840:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 29175,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2702,
                        2727,
                        2740,
                        2756,
                        2798,
                        2840,
                        2882,
                        2919,
                        2956,
                        2993,
                        1045,
                        1070,
                        1100,
                        1125,
                        1184,
                        1209,
                        1239,
                        1264,
                        2364,
                        2399
                      ],
                      "referencedDeclaration": 1239,
                      "src": "777:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 29184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "777:65:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29185,
                  "nodeType": "ExpressionStatement",
                  "src": "777:65:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "626c6f636b",
                                "id": 29189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "881:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_20b53acf0daefc8c6ad68c861fb3b543ca541abd101abc1edfcbf6606b838ef4",
                                  "typeString": "literal_string \"block\""
                                },
                                "value": "block"
                              },
                              {
                                "hexValue": "323538",
                                "id": 29190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "890:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_258_by_1",
                                  "typeString": "int_const 258"
                                },
                                "value": "258"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_20b53acf0daefc8c6ad68c861fb3b543ca541abd101abc1edfcbf6606b838ef4",
                                  "typeString": "literal_string \"block\""
                                },
                                {
                                  "typeIdentifier": "t_rational_258_by_1",
                                  "typeString": "int_const 258"
                                }
                              ],
                              "expression": {
                                "id": 29187,
                                "name": "BPS",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29118,
                                "src": "857:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BlockPaperScissors_$724",
                                  "typeString": "contract BlockPaperScissors"
                                }
                              },
                              "id": 29188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalVotesForChoice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 187,
                              "src": "857:23:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$_t_uint256_$returns$_t_struct$_Votes_$7_memory_ptr_$",
                                "typeString": "function (string memory,uint256) view external returns (struct BlockPaperScissors.Votes memory)"
                              }
                            },
                            "id": 29191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "857:37:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Votes_$7_memory_ptr",
                              "typeString": "struct BlockPaperScissors.Votes memory"
                            }
                          },
                          "id": 29192,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "voters",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6,
                          "src": "857:44:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 29193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "857:51:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 29194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "910:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 29186,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2702,
                        2727,
                        2740,
                        2756,
                        2798,
                        2840,
                        2882,
                        2919,
                        2956,
                        2993,
                        1045,
                        1070,
                        1100,
                        1125,
                        1184,
                        1209,
                        1239,
                        1264,
                        2364,
                        2399
                      ],
                      "referencedDeclaration": 1239,
                      "src": "848:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 29195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "848:64:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29196,
                  "nodeType": "ExpressionStatement",
                  "src": "848:64:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "626c6f636b",
                              "id": 29200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "951:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_20b53acf0daefc8c6ad68c861fb3b543ca541abd101abc1edfcbf6606b838ef4",
                                "typeString": "literal_string \"block\""
                              },
                              "value": "block"
                            },
                            {
                              "hexValue": "323538",
                              "id": 29201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "960:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_258_by_1",
                                "typeString": "int_const 258"
                              },
                              "value": "258"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_20b53acf0daefc8c6ad68c861fb3b543ca541abd101abc1edfcbf6606b838ef4",
                                "typeString": "literal_string \"block\""
                              },
                              {
                                "typeIdentifier": "t_rational_258_by_1",
                                "typeString": "int_const 258"
                              }
                            ],
                            "expression": {
                              "id": 29198,
                              "name": "BPS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29118,
                              "src": "927:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BlockPaperScissors_$724",
                                "typeString": "contract BlockPaperScissors"
                              }
                            },
                            "id": 29199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalVotesForChoice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 187,
                            "src": "927:23:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$_t_uint256_$returns$_t_struct$_Votes_$7_memory_ptr_$",
                              "typeString": "function (string memory,uint256) view external returns (struct BlockPaperScissors.Votes memory)"
                            }
                          },
                          "id": 29202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "927:37:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Votes_$7_memory_ptr",
                            "typeString": "struct BlockPaperScissors.Votes memory"
                          }
                        },
                        "id": 29203,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "votes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3,
                        "src": "927:43:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 29204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "972:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 29197,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2702,
                        2727,
                        2740,
                        2756,
                        2798,
                        2840,
                        2882,
                        2919,
                        2956,
                        2993,
                        1045,
                        1070,
                        1100,
                        1125,
                        1184,
                        1209,
                        1239,
                        1264,
                        2364,
                        2399
                      ],
                      "referencedDeclaration": 1239,
                      "src": "918:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 29205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "918:56:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29206,
                  "nodeType": "ExpressionStatement",
                  "src": "918:56:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "arguments": [
                                {
                                  "hexValue": "31",
                                  "id": 29210,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1009:1:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                {
                                  "hexValue": "323538",
                                  "id": 29211,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1012:3:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_258_by_1",
                                    "typeString": "int_const 258"
                                  },
                                  "value": "258"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_258_by_1",
                                    "typeString": "int_const 258"
                                  }
                                ],
                                "expression": {
                                  "id": 29208,
                                  "name": "BPS",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29118,
                                  "src": "989:3:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BlockPaperScissors_$724",
                                    "typeString": "contract BlockPaperScissors"
                                  }
                                },
                                "id": 29209,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "historyForRange",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 375,
                                "src": "989:19:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_array$_t_struct$_VotesWithResultsInBlock_$31_memory_ptr_$dyn_memory_ptr_$",
                                  "typeString": "function (uint256,uint256) view external returns (struct BlockPaperScissors.VotesWithResultsInBlock memory[] memory)"
                                }
                              },
                              "id": 29212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "989:27:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_VotesWithResultsInBlock_$31_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct BlockPaperScissors.VotesWithResultsInBlock memory[] memory"
                              }
                            },
                            "id": 29214,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 29213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1017:1:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "989:30:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VotesWithResultsInBlock_$31_memory_ptr",
                              "typeString": "struct BlockPaperScissors.VotesWithResultsInBlock memory"
                            }
                          },
                          "id": 29215,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "blockVotes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24,
                          "src": "989:41:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Votes_$7_memory_ptr",
                            "typeString": "struct BlockPaperScissors.Votes memory"
                          }
                        },
                        "id": 29216,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "votes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3,
                        "src": "989:47:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 29217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1038:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 29207,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2702,
                        2727,
                        2740,
                        2756,
                        2798,
                        2840,
                        2882,
                        2919,
                        2956,
                        2993,
                        1045,
                        1070,
                        1100,
                        1125,
                        1184,
                        1209,
                        1239,
                        1264,
                        2364,
                        2399
                      ],
                      "referencedDeclaration": 1239,
                      "src": "980:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 29218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "980:60:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29219,
                  "nodeType": "ExpressionStatement",
                  "src": "980:60:18"
                }
              ]
            },
            "functionSelector": "0bfc0194",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCastVoteAndGetters",
            "nameLocation": "656:22:18",
            "parameters": {
              "id": 29155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "678:2:18"
            },
            "returnParameters": {
              "id": 29156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "688:0:18"
            },
            "scope": 29222,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 29090,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11450,
              "src": "187:4:18"
            },
            "id": 29091,
            "nodeType": "InheritanceSpecifier",
            "src": "187:4:18"
          }
        ],
        "canonicalName": "TestBlockPaperScissors",
        "contractDependencies": [
          724
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          29222,
          11450,
          2571,
          2568,
          11401,
          7200,
          6910,
          6251,
          4679,
          3985,
          2511
        ],
        "name": "TestBlockPaperScissors",
        "nameLocation": "161:22:18",
        "scope": 29223,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 18
}