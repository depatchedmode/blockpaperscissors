{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BPS",
      "outputs": [
        {
          "internalType": "contract BlockPaperScissors",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCastVoteAndGetters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff199081166001908117909255600480549091169091179055601c80546001600160a01b0319166201234517905534801561004357600080fd5b50613210806100536000396000f3fe60806040523480156200001157600080fd5b5060043610620000fd5760003560e01c806385226c811162000097578063b5508aa9116200006e578063b5508aa914620001cb578063ba414fa614620001d5578063e20c9f7114620001f0578063fa7626d414620001fa57600080fd5b806385226c8114620001945780638da5cb5b14620001ad578063916a17c614620001c157600080fd5b8063249d39e911620000d8578063249d39e9146200013a5780633e5e3c2314620001675780633f7286f4146200017157806366d9a9a0146200017b57600080fd5b80630a9254e414620001025780630bfc0194146200010e5780631ed7831c1462000118575b600080fd5b6200010c62000208565b005b6200010c62000379565b62000122620006a7565b60405162000131919062000f47565b60405180910390f35b601d546200014e906001600160a01b031681565b6040516001600160a01b03909116815260200162000131565b620001226200070b565b620001226200076d565b62000185620007cf565b60405162000131919062000f96565b6200019e620008c2565b6040516200013191906200107c565b601b546200014e906001600160a01b031681565b620001856200099c565b6200019e62000a86565b620001df62000b60565b604051901515815260200162000131565b6200012262000c95565b600054620001df9060ff1681565b601b80546001600160a01b03191633179055604080516318caf8e360e31b81523060048201526024810191909152602060448201527f426c6f636b506170657253636973736f7273207465737420636f6e74726163746064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b1580156200029d57600080fd5b505af1158015620002b2573d6000803e3d6000fd5b50505050604051620002c49062000f39565b604051809103906000f080158015620002e1573d6000803e3d6000fd5b50601d80546001600160a01b0319166001600160a01b03928316179055601c5460405163c88a5e6d60e01b815291166004820152683635c9adc5dea000006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b1580156200035e57600080fd5b505af115801562000373573d6000803e3d6000fd5b50505050565b601c5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015620003d357600080fd5b505af1158015620003e8573d6000803e3d6000fd5b5050601d5460405163dcaad32f60e01b81526001600160a01b03909116925063dcaad32f9150666a94d74f43000090620004299061010290600401620010fa565b6000604051808303818588803b1580156200044357600080fd5b505af115801562000458573d6000803e3d6000fd5b5050601d5460405163ca8ac8f760e01b81526101026004820152620004e594506001600160a01b03909116925063ca8ac8f79150602401600060405180830381865afa158015620004ad573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620004d79190810190620013e2565b516020015151600162000cf7565b601d54604051633b89586760e01b815262000571916001600160a01b031690633b895867906200051c9061010290600401620014a5565b600060405180830381865afa1580156200053a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620005649190810190620014d9565b6020015151600162000cf7565b601d54604051633b89586760e01b8152620005f9916001600160a01b031690633b89586790620005a89061010290600401620014a5565b600060405180830381865afa158015620005c6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620005f09190810190620014d9565b51600162000cf7565b601d5460405163586511f560e11b8152600160048201526101026024820152620006a5916001600160a01b03169063b0ca23ea90604401600060405180830381865afa1580156200064e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000678919081019062001512565b6000815181106200068d576200068d62001693565b60200260200101516040015160000151600162000cf7565b565b6060600d8054806020026020016040519081016040528092919081815260200182805480156200070157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620006e2575b5050505050905090565b6060600f80548060200260200160405190810160405280929190818152602001828054801562000701576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620006e2575050505050905090565b6060600e80548060200260200160405190810160405280929190818152602001828054801562000701576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620006e2575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b82821015620008b95760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620008a057602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620008615790505b50505050508152505081526020019060010190620007f3565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b82821015620008b95783829060005260206000200180546200090890620016a9565b80601f01602080910402602001604051908101604052809291908181526020018280546200093690620016a9565b8015620009875780601f106200095b5761010080835404028352916020019162000987565b820191906000526020600020905b8154815290600101906020018083116200096957829003601f168201915b505050505081526020019060010190620008e6565b60606013805480602002602001604051908101604052809291908181526020016000905b82821015620008b95760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000a6d57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000a2e5790505b50505050508152505081526020019060010190620009c0565b60606010805480602002602001604051908101604052809291908181526020016000905b82821015620008b957838290600052602060002001805462000acc90620016a9565b80601f016020809104026020016040519081016040528092919081815260200182805462000afa90620016a9565b801562000b4b5780601f1062000b1f5761010080835404028352916020019162000b4b565b820191906000526020600020905b81548152906001019060200180831162000b2d57829003601f168201915b50505050508152602001906001019062000aaa565b60008054610100900460ff161562000b815750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000c905760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000c12917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620016e5565b60408051601f198184030181529082905262000c2e9162001718565b6000604051808303816000865af19150503d806000811462000c6d576040519150601f19603f3d011682016040523d82523d6000602084013e62000c72565b606091505b509150508080602001905181019062000c8c919062001736565b9150505b919050565b6060600c80548060200260200160405190810160405280929190818152602001828054801562000701576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620006e2575050505050905090565b80821462000e22577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000d6a9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a162000e2262000e26565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000f285760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262000ec39291602001620016e5565b60408051601f198184030181529082905262000edf9162001718565b6000604051808303816000865af19150503d806000811462000f1e576040519150601f19603f3d011682016040523d82523d6000602084013e62000f23565b606091505b505050505b6000805461ff001916610100179055565b611a79806200176283390190565b6020808252825182820181905260009190848201906040850190845b8181101562000f8a5783516001600160a01b03168352928401929184019160010162000f63565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200103e57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620010285783516001600160e01b0319168252928b019260019290920191908b019062000ffc565b50978a0197955050509187019160010162000fbe565b50919998505050505050505050565b60005b838110156200106a57818101518382015260200162001050565b83811115620003735750506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015620010ed57878503603f1901845281518051808752620010cd818989018a85016200104d565b601f01601f191695909501860194509285019290850190600101620010a3565b5092979650505050505050565b60608152600062001120606083016005815264626c6f636b60d81b602082015260400190565b82810360208401526006815265185c9d1a5cdd60d21b60208201526040810191505082604083015292915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156200118a576200118a6200114e565b60405290565b6040516060810167ffffffffffffffff811182821017156200118a576200118a6200114e565b60405160a0810167ffffffffffffffff811182821017156200118a576200118a6200114e565b604051601f8201601f1916810167ffffffffffffffff811182821017156200120857620012086200114e565b604052919050565b600067ffffffffffffffff8211156200122d576200122d6200114e565b5060051b60200190565b600082601f8301126200124957600080fd5b815167ffffffffffffffff8111156200126657620012666200114e565b6200127b601f8201601f1916602001620011dc565b8181528460208386010111156200129157600080fd5b620012a48260208301602087016200104d565b949350505050565b60006040808385031215620012c057600080fd5b620012ca62001164565b91508251825260208084015167ffffffffffffffff80821115620012ed57600080fd5b818601915086601f8301126200130257600080fd5b815162001319620013138262001210565b620011dc565b81815260059190911b830184019084810190898311156200133957600080fd5b8585015b83811015620013cf57805185811115620013575760008081fd5b8601808c03601f19018913156200136e5760008081fd5b6200137862001164565b88820151878111156200138b5760008081fd5b6200139b8e8b8386010162001237565b82525090890151906001600160a01b0382168214620013ba5760008081fd5b8089019190915283529186019186016200133d565b5080868901525050505050505092915050565b600060208284031215620013f557600080fd5b815167ffffffffffffffff808211156200140e57600080fd5b90830190606082860312156200142357600080fd5b6200142d62001190565b8251828111156200143d57600080fd5b6200144b87828601620012ac565b8252506020830151828111156200146157600080fd5b6200146f87828601620012ac565b6020830152506040830151828111156200148857600080fd5b6200149687828601620012ac565b60408301525095945050505050565b604081526000620014cb604083016005815264626c6f636b60d81b602082015260400190565b905082602083015292915050565b600060208284031215620014ec57600080fd5b815167ffffffffffffffff8111156200150457600080fd5b620012a484828501620012ac565b600060208083850312156200152657600080fd5b825167ffffffffffffffff808211156200153f57600080fd5b818501915085601f8301126200155457600080fd5b815162001565620013138262001210565b81815260059190911b830184019084810190888311156200158557600080fd5b8585015b838110156200168657805185811115620015a257600080fd5b860160a0818c03601f19011215620015ba5760008081fd5b620015c4620011b6565b8882015187811115620015d75760008081fd5b620015e78d8b8386010162001237565b8252506040808301518a83015260608084015189811115620016095760008081fd5b620016198f8d83880101620012ac565b8385015250608091508184015189811115620016355760008081fd5b620016458f8d83880101620012ac565b82850152505060a0830151888111156200165f5760008081fd5b6200166f8e8c83870101620012ac565b918301919091525084525091860191860162001589565b5098975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680620016be57607f821691505b602082108103620016df57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b03198316815281516000906200170a8160048501602087016200104d565b919091016004019392505050565b600082516200172c8184602087016200104d565b9190910192915050565b6000602082840312156200174957600080fd5b815180151581146200175a57600080fd5b939250505056fe600560e081815264626c6f636b60d81b610100526080908152610120918252643830b832b960d91b6101405260a0919091526101a060405260086101609081526773636973736f727360c01b6101805260c0526200006290600290600362000104565b50604051806060016040528060405180604001604052806007815260200166313ab4b63232b960c91b81525081526020016040518060400160405280600a81526020016939b832b1bab630ba37b960b11b815250815260200160405180604001604052806006815260200165185c9d1a5cdd60d21b8152508152506005906003620000ef92919062000104565b50348015620000fd57600080fd5b506200029c565b826003810192821562000149579160200282015b82811115620001495782518051620001389184916020909101906200015b565b509160200191906001019062000118565b5062000157929150620001e6565b5090565b828054620001699062000260565b90600052602060002090601f0160209004810192826200018d5760008555620001d8565b82601f10620001a857805160ff1916838001178555620001d8565b82800160010185558215620001d8579182015b82811115620001d8578251825591602001919060010190620001bb565b506200015792915062000207565b8082111562000157576000620001fd82826200021e565b50600101620001e6565b5b8082111562000157576000815560010162000208565b5080546200022c9062000260565b6000825580601f106200023d575050565b601f0160209004906000526020600020908101906200025d919062000207565b50565b600181811c908216806200027557607f821691505b6020821081036200029657634e487b7160e01b600052602260045260246000fd5b50919050565b6117cd80620002ac6000396000f3fe6080604052600436106100a75760003560e01c806391e706ea1161006457806391e706ea146101d65780639a0652d6146101f6578063b0ca23ea14610216578063ca8ac8f714610243578063dcaad32f14610270578063e9a734ff1461028557600080fd5b8063331a897d146100ac5780633b895867146100e2578063684908bd1461010f5780636b906d441461012f578063715139651461018657806391cadabe146101a6575b600080fd5b3480156100b857600080fd5b506100cc6100c7366004611121565b6102a5565b6040516100d99190611196565b60405180910390f35b3480156100ee57600080fd5b506101026100fd3660046111f2565b610496565b6040516100d991906112cb565b34801561011b57600080fd5b506100cc61012a366004611121565b61060e565b34801561013b57600080fd5b5061017861014a366004611381565b6001602090815260009283526040909220815180830184018051928152908401929093019190912091525481565b6040519081526020016100d9565b34801561019257600080fd5b506100cc6101a1366004611121565b6106ae565b3480156101b257600080fd5b506101c66101c13660046113c8565b6106be565b60405190151581526020016100d9565b3480156101e257600080fd5b506101c66101f13660046111f2565b6107d4565b34801561020257600080fd5b506101c66102113660046113c8565b61089e565b34801561022257600080fd5b5061023661023136600461140a565b6108e2565b6040516100d9919061142c565b34801561024f57600080fd5b5061026361025e366004611121565b610a37565b6040516100d991906114f3565b61028361027e366004611554565b610e2b565b005b34801561029157600080fd5b506101c66102a03660046115c8565b610f8f565b60008181526001602052604081206060918291600282016040516102c99190611672565b9081526020016040518091039020600001549050600060016000868152602001908152602001600020600260016003811061030657610306611622565b016040516103149190611672565b9081526040805160209281900383018120546000898152600190945291832091935061034290600490611672565b908152604051908190036020019020549050818311801561036257508083115b156103fd57600260005b01805461037890611638565b80601f01602080910402602001604051908101604052809291908181526020018280546103a490611638565b80156103f15780601f106103c6576101008083540402835291602001916103f1565b820191906000526020600020905b8154815290600101906020018083116103d457829003601f168201915b5050505050935061048c565b828211801561040b57508082115b15610419576002600161036c565b828111801561042757508181115b156104345760028061036c565b8183148061044157508083145b8061044b57508082145b1561047957604051806040016040528060098152602001687374616c656d61746560b81b815250935061048c565b6040518060200160405280600081525093505b5091949350505050565b6040805180820190915260008152606060208201526104b584846106be565b6104be57600080fd5b6000828152600160205260409081902090516104dd908690869061170d565b90815260200160405180910390206040518060400160405290816000820154815260200160018201805480602002602001604051908101604052809291908181526020016000905b828210156105fc578382906000526020600020906002020160405180604001604052908160008201805461055890611638565b80601f016020809104026020016040519081016040528092919081815260200182805461058490611638565b80156105d15780601f106105a6576101008083540402835291602001916105d1565b820191906000526020600020905b8154815290600101906020018083116105b457829003601f168201915b50505091835250506001918201546001600160a01b0316602091820152918352929092019101610525565b505050508152505090505b9392505050565b6002816003811061061e57600080fd5b01805490915061062d90611638565b80601f016020809104026020016040519081016040528092919081815260200182805461065990611638565b80156106a65780601f1061067b576101008083540402835291602001916106a6565b820191906000526020600020905b81548152906001019060200180831161068957829003601f168201915b505050505081565b6005816003811061061e57600080fd5b6000805b60038110156107c8576107a7600282600381106106e1576106e1611622565b0180546106ed90611638565b80601f016020809104026020016040519081016040528092919081815260200182805461071990611638565b80156107665780601f1061073b57610100808354040283529160200191610766565b820191906000526020600020905b81548152906001019060200180831161074957829003601f168201915b505050505085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610f8f92505050565b156107b65760019150506107ce565b806107c081611733565b9150506106c2565b50600090505b92915050565b6000805b6000838152600160205260409081902090516107f7908790879061170d565b9081526040519081900360200190206001015481101561089357600083815260016020526040908190209051339190610833908890889061170d565b9081526020016040518091039020600101828154811061085557610855611622565b60009182526020909120600160029092020101546001600160a01b031603610881576000915050610607565b8061088b81611733565b9150506107d8565b506001949350505050565b6000805b60038110156107c8576108c1600582600381106106e1576106e1611622565b156108d05760019150506107ce565b806108da81611733565b9150506108a2565b606060006108f184600161174c565b67ffffffffffffffff811115610909576109096112de565b60405190808252806020026020018201604052801561094257816020015b61092f610fe8565b8152602001906001900390816109275790505b50905060005b848111610a2f57600061095e61025e8387611764565b9050610968610fe8565b815160408083019190915260208301516060830152820151608082015260006109946100c78589611764565b905060006109b160016109a7878b611764565b6100c79190611764565b90506109bd8282610f8f565b156109e4576040805180820190915260048152636472617760e01b602082015283526109e8565b8183525b6109f28589611764565b602084015285518390879087908110610a0d57610a0d611622565b6020026020010181905250505050508080610a2790611733565b915050610948565b509392505050565b610a3f611067565b610a47611067565b600083815260016020526040812090600201604051610a669190611672565b90815260200160405180910390206040518060400160405290816000820154815260200160018201805480602002602001604051908101604052809291908181526020016000905b82821015610b855783829060005260206000209060020201604051806040016040529081600082018054610ae190611638565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0d90611638565b8015610b5a5780601f10610b2f57610100808354040283529160200191610b5a565b820191906000526020600020905b815481529060010190602001808311610b3d57829003601f168201915b50505091835250506001918201546001600160a01b0316602091820152918352929092019101610aae565b505050915250508152600083815260016020526040908190209051610bac90600390611672565b90815260200160405180910390206040518060400160405290816000820154815260200160018201805480602002602001604051908101604052809291908181526020016000905b82821015610ccb5783829060005260206000209060020201604051806040016040529081600082018054610c2790611638565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5390611638565b8015610ca05780601f10610c7557610100808354040283529160200191610ca0565b820191906000526020600020905b815481529060010190602001808311610c8357829003601f168201915b50505091835250506001918201546001600160a01b0316602091820152918352929092019101610bf4565b50505091525050602080830191909152600084815260019091526040902060028001604051610cfa9190611672565b90815260200160405180910390206040518060400160405290816000820154815260200160018201805480602002602001604051908101604052809291908181526020016000905b82821015610e195783829060005260206000209060020201604051806040016040529081600082018054610d7590611638565b80601f0160208091040260200160405190810160405280929190818152602001828054610da190611638565b8015610dee5780601f10610dc357610100808354040283529160200191610dee565b820191906000526020600020905b815481529060010190602001808311610dd157829003601f168201915b50505091835250506001918201546001600160a01b0316602091820152918352929092019101610d42565b50505091525050604082015292915050565b4360005414610e3957436000555b610e4385856106be565b610e4c57600080fd5b610e56838361089e565b610e5f57600080fd5b610e6a8585836107d4565b610e7357600080fd5b60018060008381526020019081526020016000208686604051610e9792919061170d565b90815260200160405180910390206000016000828254610eb7919061174c565b9091555050600081815260016020526040908190209051610edb908790879061170d565b9081526020016040518091039020600101604051806040016040528085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093855250503360209384015250835460018101855593815281902082518051939460020290910192610f5e9284920190611088565b5060209190910151600190910180546001600160a01b0319166001600160a01b039092169190911790555050505050565b600081604051602001610fa2919061177b565b6040516020818303038152906040528051906020012083604051602001610fc9919061177b565b6040516020818303038152906040528051906020012014905092915050565b6040518060a00160405280606081526020016000815260200161101e604051806040016040528060008152602001606081525090565b8152602001611040604051806040016040528060008152602001606081525090565b8152602001611062604051806040016040528060008152602001606081525090565b905290565b6040805160a08101909152600060608083019182526080830152819061101e565b82805461109490611638565b90600052602060002090601f0160209004810192826110b657600085556110fc565b82601f106110cf57805160ff19168380011785556110fc565b828001600101855582156110fc579182015b828111156110fc5782518255916020019190600101906110e1565b5061110892915061110c565b5090565b5b80821115611108576000815560010161110d565b60006020828403121561113357600080fd5b5035919050565b60005b8381101561115557818101518382015260200161113d565b83811115611164576000848401525b50505050565b6000815180845261118281602086016020860161113a565b601f01601f19169290920160200192915050565b602081526000610607602083018461116a565b60008083601f8401126111bb57600080fd5b50813567ffffffffffffffff8111156111d357600080fd5b6020830191508360208285010111156111eb57600080fd5b9250929050565b60008060006040848603121561120757600080fd5b833567ffffffffffffffff81111561121e57600080fd5b61122a868287016111a9565b909790965060209590950135949350505050565b6000604080840183518552602080850151838288015282815180855260608901915060608160051b8a01019450838301925060005b818110156112bd57898603605f19018352835180518888526112978989018261116a565b918701516001600160a01b03169787019790975295509284019291840191600101611273565b509398975050505050505050565b602081526000610607602083018461123e565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261130557600080fd5b813567ffffffffffffffff80821115611320576113206112de565b604051601f8301601f19908116603f01168101908282118183101715611348576113486112de565b8160405283815286602085880101111561136157600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561139457600080fd5b82359150602083013567ffffffffffffffff8111156113b257600080fd5b6113be858286016112f4565b9150509250929050565b600080602083850312156113db57600080fd5b823567ffffffffffffffff8111156113f257600080fd5b6113fe858286016111a9565b90969095509350505050565b6000806040838503121561141d57600080fd5b50508035926020909101359150565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156114e557603f19898403018552815160a081518186526114798287018261116a565b91505088820151898601528782015185820389870152611499828261123e565b915050606080830151868303828801526114b3838261123e565b92505050608080830151925085820381870152506114d1818361123e565b968901969450505090860190600101611453565b509098975050505050505050565b60208152600082516060602084015261150f608084018261123e565b90506020840151601f198085840301604086015261152d838361123e565b925060408601519150808584030160608601525061154b828261123e565b95945050505050565b60008060008060006060868803121561156c57600080fd5b853567ffffffffffffffff8082111561158457600080fd5b61159089838a016111a9565b909750955060208801359150808211156115a957600080fd5b506115b6888289016111a9565b96999598509660400135949350505050565b600080604083850312156115db57600080fd5b823567ffffffffffffffff808211156115f357600080fd5b6115ff868387016112f4565b9350602085013591508082111561161557600080fd5b506113be858286016112f4565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061164c57607f821691505b60208210810361166c57634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c91508083168061168e57607f831692505b602080841082036116ad57634e487b7160e01b86526022600452602486fd5b8180156116c157600181146116d2576116ff565b60ff198616895284890196506116ff565b60008a81526020902060005b868110156116f75781548b8201529085019083016116de565b505084890196505b509498975050505050505050565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b6000600182016117455761174561171d565b5060010190565b6000821982111561175f5761175f61171d565b500190565b6000828210156117765761177661171d565b500390565b6000825161178d81846020870161113a565b919091019291505056fea26469706673582212209d81ad23141d6e10dcbe3ffebbac753ffb42472618515134130abc2033b72ca764736f6c634300080d0033a2646970667358221220b29ed30c78102d4a82a12dda9cc23a7957b859ece1ffd7a82cb8c83a0db6ca8364736f6c634300080d0033",
    "sourceMap": "152:963:18:-:0;;;1572:26:1;;;-1:-1:-1;;1572:26:1;;;1594:4;1572:26;;;;;;3288:44:4;;;;;;;;;;;220:30:18;;;-1:-1:-1;;;;;;220:30:18;242:7;220:30;;;152:963;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "152:963:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;508:193;;;:::i;:::-;;705:408;;;:::i;2161:134:7:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;474:29:18;;;;;-1:-1:-1;;;;;474:29:18;;;;;;-1:-1:-1;;;;;867:32:19;;;849:51;;837:2;822:18;474:29:18;677:229:19;2930:133:7;;;:::i;2631:141::-;;;:::i;2447:178::-;;;:::i;:::-;;;;;;;:::i;2301:140::-;;;:::i;:::-;;;;;;;:::i;196:20:18:-;;;;;-1:-1:-1;;;;;196:20:18;;;2778:146:7;;;:::i;1866:141::-;;;:::i;1819:584:1:-;;;:::i;:::-;;;4125:14:19;;4118:22;4100:41;;4088:2;4073:18;1819:584:1;3960:187:19;2013:142:7;;;:::i;1572:26:1:-;;;;;;;;;508:193:18;538:5;:18;;-1:-1:-1;;;;;;538:18:18;546:10;538:18;;;562:59;;;-1:-1:-1;;;562:59:18;;579:4;562:59;;;4364:51:19;4431:18;;;4424:30;;;;4446:2;4470:18;;;4463:30;4529:34;4509:18;;;4502:62;562:8:18;;;;4581:19:19;;562:59:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;633:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:3:18;:30;;-1:-1:-1;;;;;;627:30:18;-1:-1:-1;;;;;627:30:18;;;;;;679:3;;663:33;;-1:-1:-1;;;663:33:18;;679:3;;663:33;;;4814:51:19;685:10:18;4881:18:19;;;4874:34;663:7:18;;;;4787:18:19;;663:33:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;508:193::o;705:408::-;769:3;;752:22;;-1:-1:-1;;;752:22:18;;-1:-1:-1;;;;;769:3:18;;;752:22;;;849:51:19;752:8:18;;;;822:18:19;;752:22:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;780:3:18;;:58;;-1:-1:-1;;;780:58:18;;-1:-1:-1;;;;;780:3:18;;;;-1:-1:-1;780:12:18;;-1:-1:-1;800:13:18;;780:58;;834:3;;780:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;854:3:18;;:27;;-1:-1:-1;;;854:27:18;;877:3;854:27;;;5862:25:19;845:65:18;;-1:-1:-1;;;;;;854:3:18;;;;-1:-1:-1;854:22:18;;-1:-1:-1;5835:18:19;;854:27:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;854:27:18;;;;;;;;;;;;:::i;:::-;:38;:45;;;:52;908:1;845:8;:65::i;:::-;925:3;;:37;;-1:-1:-1;;;925:37:18;;916:64;;-1:-1:-1;;;;;925:3:18;;:23;;:37;;958:3;;925:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;925:37:18;;;;;;;;;;;;:::i;:::-;:44;;;:51;978:1;916:8;:64::i;:::-;995:3;;:37;;-1:-1:-1;;;995:37:18;;986:56;;-1:-1:-1;;;;;995:3:18;;:23;;:37;;1028:3;;995:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;995:37:18;;;;;;;;;;;;:::i;:::-;:43;1040:1;986:8;:56::i;:::-;1057:3;;:27;;-1:-1:-1;;;1057:27:18;;:3;:27;;;11586:25:19;1080:3:18;11627:18:19;;;11620:34;1048:60:18;;-1:-1:-1;;;;;1057:3:18;;:19;;11559:18:19;;1057:27:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1057:27:18;;;;;;;;;;;;:::i;:::-;1085:1;1057:30;;;;;;;;:::i;:::-;;;;;;;:41;;;:47;;;1106:1;1048:8;:60::i;:::-;705:408::o;2161:134:7:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:7;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;2930:133::-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:7;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:7;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2447:178::-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2301:140::-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:141;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:1;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:1;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;4814:51:19;;;-1:-1:-1;;;4881:18:19;;;4874:34;2196:43:1;;;;;;;;;4787:18:19;;;2196:43:1;;;-1:-1:-1;;1671:64:1;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:1;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:1:o;2013:142:7:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:7;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;5209:262:1:-;5271:1;5266;:6;5262:203;;5293:41;;;;;16100:2:19;16082:21;;;16139:2;16119:18;;;16112:30;16178:34;16173:2;16158:18;;16151:62;-1:-1:-1;;;16244:2:19;16229:18;;16222:32;16286:3;16271:19;;15898:398;5293:41:1;;;;;;;;5353:31;;;16513:21:19;;;16570:2;16550:18;;;16543:30;-1:-1:-1;;;16604:2:19;16589:18;;16582:40;16689:4;16674:20;;16667:36;;;5353:31:1;;;;;;;16654:3:19;5353:31:1;;;5403;;;16926:21:19;;;16983:2;16963:18;;;16956:30;-1:-1:-1;;;17017:2:19;17002:18;;16995:40;17102:4;17087:20;;17080:36;;;5403:31:1;;;;;;;17067:3:19;5403:31:1;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;2409:432::-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;17329:51:19;;;-1:-1:-1;;;17396:18:19;;;17389:34;;;;2712:4:1;17439:18:19;;;17432:34;2489:11:1;;1671:64;2586:43;;17302:18:19;;2652:67:1;;;-1:-1:-1;;2652:67:1;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:1;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:1;2820:7;:14;;-1:-1:-1;;2820:14:1;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;14:658:19:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:19;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:19;;14:658;-1:-1:-1;;;;;;14:658:19:o;911:1567::-;1113:4;1142:2;1182;1171:9;1167:18;1212:2;1201:9;1194:21;1235:6;1270;1264:13;1301:6;1293;1286:22;1327:2;1317:12;;1360:2;1349:9;1345:18;1338:25;;1422:2;1412:6;1409:1;1405:14;1394:9;1390:30;1386:39;1460:2;1452:6;1448:15;1481:1;1502;1512:937;1528:6;1523:3;1520:15;1512:937;;;1597:22;;;-1:-1:-1;;1593:36:19;1581:49;;1653:13;;1740:9;;-1:-1:-1;;;;;1736:35:19;1721:51;;1811:11;;1805:18;1843:15;;;1836:27;;;1924:19;;1693:15;;;1956:24;;;2046:21;;;;2091:1;;2014:2;2002:15;;;2105:236;2121:8;2116:3;2113:17;2105:236;;;2202:15;;-1:-1:-1;;;;;;2198:42:19;2184:57;;2310:17;;;;2149:1;2140:11;;;;;2267:14;;;;2105:236;;;-1:-1:-1;2427:12:19;;;;2364:5;-1:-1:-1;;;2392:15:19;;;;1554:1;1545:11;1512:937;;;-1:-1:-1;2466:6:19;;911:1567;-1:-1:-1;;;;;;;;;911:1567:19:o;2483:258::-;2555:1;2565:113;2579:6;2576:1;2573:13;2565:113;;;2655:11;;;2649:18;2636:11;;;2629:39;2601:2;2594:10;2565:113;;;2696:6;2693:1;2690:13;2687:48;;;-1:-1:-1;;2731:1:19;2713:16;;2706:27;2483:258::o;2746:1001::-;2908:4;2937:2;2977;2966:9;2962:18;3007:2;2996:9;2989:21;3030:6;3065;3059:13;3096:6;3088;3081:22;3134:2;3123:9;3119:18;3112:25;;3196:2;3186:6;3183:1;3179:14;3168:9;3164:30;3160:39;3146:53;;3234:2;3226:6;3222:15;3255:1;3265:453;3279:6;3276:1;3273:13;3265:453;;;3344:22;;;-1:-1:-1;;3340:36:19;3328:49;;3400:13;;3442:9;;3464:24;;;3501:61;3442:9;3536:15;;;3523:11;;;3501:61;:::i;:::-;3628:2;3605:17;-1:-1:-1;;3601:31:19;3589:44;;;;3585:53;;;-1:-1:-1;3696:12:19;;;;3661:15;;;;3301:1;3294:9;3265:453;;;-1:-1:-1;3735:6:19;;2746:1001;-1:-1:-1;;;;;;;2746:1001:19:o;5077:624::-;5418:2;5407:9;5400:21;5381:4;5444:49;5489:2;5478:9;5474:18;4996:1;4984:14;;-1:-1:-1;;;5023:4:19;5014:14;;5007:31;5063:2;5054:12;;4919:153;5444:49;5541:9;5533:6;5529:22;5524:2;5513:9;5509:18;5502:50;5576:1;5568:6;5561:17;-1:-1:-1;;;5606:2:19;5598:6;5594:15;5587:33;5649:2;5641:6;5637:15;5629:23;;;5688:6;5683:2;5672:9;5668:18;5661:34;5077:624;;;;:::o;5898:127::-;5959:10;5954:3;5950:20;5947:1;5940:31;5990:4;5987:1;5980:15;6014:4;6011:1;6004:15;6030:257;6102:4;6096:11;;;6134:17;;6181:18;6166:34;;6202:22;;;6163:62;6160:88;;;6228:18;;:::i;:::-;6264:4;6257:24;6030:257;:::o;6292:253::-;6364:2;6358:9;6406:4;6394:17;;6441:18;6426:34;;6462:22;;;6423:62;6420:88;;;6488:18;;:::i;6550:253::-;6622:2;6616:9;6664:4;6652:17;;6699:18;6684:34;;6720:22;;;6681:62;6678:88;;;6746:18;;:::i;6808:275::-;6879:2;6873:9;6944:2;6925:13;;-1:-1:-1;;6921:27:19;6909:40;;6979:18;6964:34;;7000:22;;;6961:62;6958:88;;;7026:18;;:::i;:::-;7062:2;7055:22;6808:275;;-1:-1:-1;6808:275:19:o;7088:187::-;7152:4;7185:18;7177:6;7174:30;7171:56;;;7207:18;;:::i;:::-;-1:-1:-1;7252:1:19;7248:14;7264:4;7244:25;;7088:187::o;7280:497::-;7334:5;7387:3;7380:4;7372:6;7368:17;7364:27;7354:55;;7405:1;7402;7395:12;7354:55;7434:6;7428:13;7460:18;7456:2;7453:26;7450:52;;;7482:18;;:::i;:::-;7526:55;7569:2;7550:13;;-1:-1:-1;;7546:27:19;7575:4;7542:38;7526:55;:::i;:::-;7606:2;7597:7;7590:19;7652:3;7645:4;7640:2;7632:6;7628:15;7624:26;7621:35;7618:55;;;7669:1;7666;7659:12;7618:55;7682:64;7743:2;7736:4;7727:7;7723:18;7716:4;7708:6;7704:17;7682:64;:::i;:::-;7764:7;7280:497;-1:-1:-1;;;;7280:497:19:o;7782:1888::-;7845:5;7875:4;7916:2;7904:9;7899:3;7895:19;7891:28;7888:48;;;7932:1;7929;7922:12;7888:48;7954:22;;:::i;:::-;7945:31;;8005:9;7999:16;7992:5;7985:31;8035:2;8081;8070:9;8066:18;8060:25;8104:18;8145:2;8137:6;8134:14;8131:34;;;8161:1;8158;8151:12;8131:34;8199:6;8188:9;8184:22;8174:32;;8244:3;8237:4;8233:2;8229:13;8225:23;8215:51;;8262:1;8259;8252:12;8215:51;8291:2;8285:9;8314:64;8330:47;8374:2;8330:47;:::i;:::-;8314:64;:::i;:::-;8412:15;;;8494:1;8490:10;;;;8482:19;;8478:28;;;8443:12;;;;8518:15;;;8515:35;;;8546:1;8543;8536:12;8515:35;8578:2;8574;8570:11;8590:1036;8606:6;8601:3;8598:15;8590:1036;;;8685:3;8679:10;8721:2;8708:11;8705:19;8702:109;;;8765:1;8794:2;8790;8783:14;8702:109;8834:20;;8878:12;;;-1:-1:-1;;8874:26:19;8870:35;-1:-1:-1;8867:125:19;;;8946:1;8975:2;8971;8964:14;8867:125;9020:22;;:::i;:::-;9085:2;9081;9077:11;9071:18;9118:2;9108:8;9105:16;9102:106;;;9162:1;9191:2;9187;9180:14;9102:106;9237:61;9294:3;9289:2;9278:8;9274:2;9270:17;9266:26;9237:61;:::i;:::-;9221:78;;-1:-1:-1;9333:11:19;;;9327:18;;-1:-1:-1;;;;;9380:33:19;;9368:46;;9358:147;;9457:1;9487:3;9482;9475:16;9358:147;9525:16;;;9518:33;;;;9564:20;;9604:12;;;;8623;;8590:1036;;;8594:3;9658:5;9653:2;9646:5;9642:14;9635:29;;;;;;;;7782:1888;;;;:::o;9675:992::-;9773:6;9826:2;9814:9;9805:7;9801:23;9797:32;9794:52;;;9842:1;9839;9832:12;9794:52;9875:9;9869:16;9904:18;9945:2;9937:6;9934:14;9931:34;;;9961:1;9958;9951:12;9931:34;9984:22;;;;10040:4;10022:16;;;10018:27;10015:47;;;10058:1;10055;10048:12;10015:47;10084:22;;:::i;:::-;10137:2;10131:9;10165:2;10155:8;10152:16;10149:36;;;10181:1;10178;10171:12;10149:36;10208:62;10262:7;10251:8;10247:2;10243:17;10208:62;:::i;:::-;10201:5;10194:77;;10310:2;10306;10302:11;10296:18;10339:2;10329:8;10326:16;10323:36;;;10355:1;10352;10345:12;10323:36;10391:62;10445:7;10434:8;10430:2;10426:17;10391:62;:::i;:::-;10386:2;10379:5;10375:14;10368:86;;10493:2;10489;10485:11;10479:18;10522:2;10512:8;10509:16;10506:36;;;10538:1;10535;10528:12;10506:36;10574:62;10628:7;10617:8;10613:2;10609:17;10574:62;:::i;:::-;10569:2;10558:14;;10551:86;-1:-1:-1;10562:5:19;9675:992;-1:-1:-1;;;;;9675:992:19:o;10672:358::-;10912:2;10901:9;10894:21;10875:4;10932:49;10977:2;10966:9;10962:18;4996:1;4984:14;;-1:-1:-1;;;5023:4:19;5014:14;;5007:31;5063:2;5054:12;;4919:153;10932:49;10924:57;;11017:6;11012:2;11001:9;10997:18;10990:34;10672:358;;;;:::o;11035:354::-;11126:6;11179:2;11167:9;11158:7;11154:23;11150:32;11147:52;;;11195:1;11192;11185:12;11147:52;11228:9;11222:16;11261:18;11253:6;11250:30;11247:50;;;11293:1;11290;11283:12;11247:50;11316:67;11375:7;11366:6;11355:9;11351:22;11316:67;:::i;11665:2495::-;11799:6;11830:2;11873;11861:9;11852:7;11848:23;11844:32;11841:52;;;11889:1;11886;11879:12;11841:52;11922:9;11916:16;11951:18;11992:2;11984:6;11981:14;11978:34;;;12008:1;12005;11998:12;11978:34;12046:6;12035:9;12031:22;12021:32;;12091:7;12084:4;12080:2;12076:13;12072:27;12062:55;;12113:1;12110;12103:12;12062:55;12142:2;12136:9;12165:64;12181:47;12225:2;12181:47;:::i;12165:64::-;12263:15;;;12345:1;12341:10;;;;12333:19;;12329:28;;;12294:12;;;;12369:19;;;12366:39;;;12401:1;12398;12391:12;12366:39;12433:2;12429;12425:11;12445:1685;12461:6;12456:3;12453:15;12445:1685;;;12540:3;12534:10;12576:2;12563:11;12560:19;12557:39;;;12592:1;12589;12582:12;12557:39;12619:20;;12691:4;12663:16;;;-1:-1:-1;;12659:30:19;12655:41;12652:131;;;12737:1;12766:2;12762;12755:14;12652:131;12809:22;;:::i;:::-;12874:2;12870;12866:11;12860:18;12907:2;12897:8;12894:16;12891:106;;;12951:1;12980:2;12976;12969:14;12891:106;13024:65;13081:7;13076:2;13065:8;13061:2;13057:17;13053:26;13024:65;:::i;:::-;13017:5;13010:80;;13113:2;13165;13161;13157:11;13151:18;13146:2;13139:5;13135:14;13128:42;13193:2;13238;13234;13230:11;13224:18;13271:2;13261:8;13258:16;13255:109;;;13316:1;13346:3;13341;13334:16;13255:109;13400:71;13463:7;13458:2;13447:8;13443:2;13439:17;13435:26;13400:71;:::i;:::-;13395:2;13388:5;13384:14;13377:95;;13496:3;13485:14;;13542:3;13538:2;13534:12;13528:19;13576:2;13566:8;13563:16;13560:109;;;13621:1;13651:3;13646;13639:16;13560:109;13705:71;13768:7;13763:2;13752:8;13748:2;13744:17;13740:26;13705:71;:::i;:::-;13700:2;13693:5;13689:14;13682:95;;;13820:4;13816:2;13812:13;13806:20;13855:2;13845:8;13842:16;13839:109;;;13900:1;13930:3;13925;13918:16;13839:109;13985:71;14048:7;14043:2;14032:8;14028:2;14024:17;14020:26;13985:71;:::i;:::-;13968:15;;;13961:96;;;;-1:-1:-1;14070:18:19;;-1:-1:-1;14108:12:19;;;;12478;;12445:1685;;;-1:-1:-1;14149:5:19;11665:2495;-1:-1:-1;;;;;;;;11665:2495:19:o;14165:127::-;14226:10;14221:3;14217:20;14214:1;14207:31;14257:4;14254:1;14247:15;14281:4;14278:1;14271:15;14297:380;14376:1;14372:12;;;;14419;;;14440:61;;14494:4;14486:6;14482:17;14472:27;;14440:61;14547:2;14539:6;14536:14;14516:18;14513:38;14510:161;;14593:10;14588:3;14584:20;14581:1;14574:31;14628:4;14625:1;14618:15;14656:4;14653:1;14646:15;14510:161;;14297:380;;;:::o;14961:371::-;-1:-1:-1;;;;;;15146:33:19;;15134:46;;15203:13;;15116:3;;15225:61;15203:13;15275:1;15266:11;;15259:4;15247:17;;15225:61;:::i;:::-;15306:16;;;;15324:1;15302:24;;14961:371;-1:-1:-1;;;14961:371:19:o;15337:274::-;15466:3;15504:6;15498:13;15520:53;15566:6;15561:3;15554:4;15546:6;15542:17;15520:53;:::i;:::-;15589:16;;;;;15337:274;-1:-1:-1;;15337:274:19:o;15616:277::-;15683:6;15736:2;15724:9;15715:7;15711:23;15707:32;15704:52;;;15752:1;15749;15742:12;15704:52;15784:9;15778:16;15837:5;15830:13;15823:21;15816:5;15813:32;15803:60;;15859:1;15856;15849:12;15803:60;15882:5;15616:277;-1:-1:-1;;;15616:277:19:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "BPS()": "249d39e9",
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "owner()": "8da5cb5b",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testCastVoteAndGetters()": "0bfc0194"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BPS\",\"outputs\":[{\"internalType\":\"contract BlockPaperScissors\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCastVoteAndGetters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/BlockPaperScissors.t.sol\":\"TestBlockPaperScissors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/BlockPaperScissors.sol\":{\"keccak256\":\"0xae43ca3ed812ba5bd154833495abfc77067f88de6c65f74a96f8f63f62a843ac\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://de798fbef9fcb2e783173094332a6dc1dd7204a894503e7cece0b8138417f09b\",\"dweb:/ipfs/Qmeyw2qFLqVw2cegY5zKzpSvbm8DgcCEKcQ3TDei2G1fNQ\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749\",\"dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af\",\"dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17\",\"dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa9a389ae870e108986d72d760a792d011516a7091ab48da20a5982f8ae2e2575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6de722b90ec6b39fe65e121db1735234c8a123fd7bee0ed5daa646b0e6e14a5\",\"dweb:/ipfs/QmQfrW7sP3snKdoxtEVWh5CAxApwhBs6uLvDhiJLTza1Lp\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x4ba6040f75ea4425c4cf5f77a8ea99f3a7a0fcb5bf13d0186d0952cf505b8203\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://363bd98c4de695b34709e318213b2955d8a493d0249857701c05966c81341b10\",\"dweb:/ipfs/QmdtS71RFemQhq8WYT3WP5UQ4FAsCnaw2JbiPJ3vTUYYRu\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"test/BlockPaperScissors.t.sol\":{\"keccak256\":\"0xec6cd025990ec99cf51298061a7a7cde37c128ae6b209cffcdd764066d658bdc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c47b17140cc179c78a3d1936ef9cb299323673d83275297e696eaf6086de743d\",\"dweb:/ipfs/QmerVNHg1pVgUJmpPZq9Xy5royrcWNiqApyaP3RR3qPRai\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BPS",
          "outputs": [
            {
              "internalType": "contract BlockPaperScissors",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCastVoteAndGetters"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/BlockPaperScissors.t.sol": "TestBlockPaperScissors"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/BlockPaperScissors.sol": {
        "keccak256": "0xae43ca3ed812ba5bd154833495abfc77067f88de6c65f74a96f8f63f62a843ac",
        "urls": [
          "bzz-raw://de798fbef9fcb2e783173094332a6dc1dd7204a894503e7cece0b8138417f09b",
          "dweb:/ipfs/Qmeyw2qFLqVw2cegY5zKzpSvbm8DgcCEKcQ3TDei2G1fNQ"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154",
        "urls": [
          "bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749",
          "dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
        "urls": [
          "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
          "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b",
        "urls": [
          "bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17",
          "dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa9a389ae870e108986d72d760a792d011516a7091ab48da20a5982f8ae2e2575",
        "urls": [
          "bzz-raw://d6de722b90ec6b39fe65e121db1735234c8a123fd7bee0ed5daa646b0e6e14a5",
          "dweb:/ipfs/QmQfrW7sP3snKdoxtEVWh5CAxApwhBs6uLvDhiJLTza1Lp"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x4ba6040f75ea4425c4cf5f77a8ea99f3a7a0fcb5bf13d0186d0952cf505b8203",
        "urls": [
          "bzz-raw://363bd98c4de695b34709e318213b2955d8a493d0249857701c05966c81341b10",
          "dweb:/ipfs/QmdtS71RFemQhq8WYT3WP5UQ4FAsCnaw2JbiPJ3vTUYYRu"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "test/BlockPaperScissors.t.sol": {
        "keccak256": "0xec6cd025990ec99cf51298061a7a7cde37c128ae6b209cffcdd764066d658bdc",
        "urls": [
          "bzz-raw://c47b17140cc179c78a3d1936ef9cb299323673d83275297e696eaf6086de743d",
          "dweb:/ipfs/QmerVNHg1pVgUJmpPZq9Xy5royrcWNiqApyaP3RR3qPRai"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/BlockPaperScissors.t.sol",
    "id": 29080,
    "exportedSymbols": {
      "BlockPaperScissors": [
        574
      ],
      "DSTest": [
        2361
      ],
      "StdAssertions": [
        3835
      ],
      "StdChains": [
        4529
      ],
      "StdCheats": [
        6760
      ],
      "StdInvariant": [
        7050
      ],
      "StdStorage": [
        7800
      ],
      "StdStyle": [
        10444
      ],
      "StdUtils": [
        11251
      ],
      "Test": [
        11300
      ],
      "TestBase": [
        2421
      ],
      "TestBlockPaperScissors": [
        29079
      ],
      "Vm": [
        12612
      ],
      "console": [
        20676
      ],
      "console2": [
        28772
      ],
      "stdError": [
        6826
      ],
      "stdJson": [
        7626
      ],
      "stdMath": [
        7768
      ],
      "stdStorage": [
        9233
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1077:18",
    "nodes": [
      {
        "id": 28937,
        "nodeType": "PragmaDirective",
        "src": "39:24:18",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 28938,
        "nodeType": "ImportDirective",
        "src": "65:39:18",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "../lib/forge-std/src/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29080,
        "sourceUnit": 11301,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28939,
        "nodeType": "ImportDirective",
        "src": "105:45:18",
        "nodes": [],
        "absolutePath": "contracts/BlockPaperScissors.sol",
        "file": "../contracts/BlockPaperScissors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29080,
        "sourceUnit": 575,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29079,
        "nodeType": "ContractDefinition",
        "src": "152:963:18",
        "nodes": [
          {
            "id": 28943,
            "nodeType": "VariableDeclaration",
            "src": "196:20:18",
            "nodes": [],
            "constant": false,
            "functionSelector": "8da5cb5b",
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "211:5:18",
            "scope": 29079,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 28942,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "196:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 28949,
            "nodeType": "VariableDeclaration",
            "src": "220:30:18",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "228:3:18",
            "scope": 29079,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 28944,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "220:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "30783132333435",
                  "id": 28947,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "242:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_74565_by_1",
                    "typeString": "int_const 74565"
                  },
                  "value": "0x12345"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_74565_by_1",
                    "typeString": "int_const 74565"
                  }
                ],
                "id": 28946,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "234:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 28945,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "234:7:18",
                  "typeDescriptions": {}
                }
              },
              "id": 28948,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "234:16:18",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 28954,
            "nodeType": "StructDefinition",
            "src": "255:57:18",
            "nodes": [],
            "canonicalName": "TestBlockPaperScissors.Vote",
            "members": [
              {
                "constant": false,
                "id": 28951,
                "mutability": "mutable",
                "name": "persona",
                "nameLocation": "280:7:18",
                "nodeType": "VariableDeclaration",
                "scope": 28954,
                "src": "273:14:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 28950,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "273:6:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28953,
                "mutability": "mutable",
                "name": "sender",
                "nameLocation": "301:6:18",
                "nodeType": "VariableDeclaration",
                "scope": 28954,
                "src": "293:14:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 28952,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "293:7:18",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Vote",
            "nameLocation": "262:4:18",
            "scope": 29079,
            "visibility": "public"
          },
          {
            "id": 28961,
            "nodeType": "StructDefinition",
            "src": "316:56:18",
            "nodes": [],
            "canonicalName": "TestBlockPaperScissors.Votes",
            "members": [
              {
                "constant": false,
                "id": 28956,
                "mutability": "mutable",
                "name": "votes",
                "nameLocation": "343:5:18",
                "nodeType": "VariableDeclaration",
                "scope": 28961,
                "src": "335:13:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 28955,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "335:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28960,
                "mutability": "mutable",
                "name": "voters",
                "nameLocation": "361:6:18",
                "nodeType": "VariableDeclaration",
                "scope": 28961,
                "src": "354:13:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Vote_$28954_storage_$dyn_storage_ptr",
                  "typeString": "struct TestBlockPaperScissors.Vote[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 28958,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28957,
                      "name": "Vote",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 28954,
                      "src": "354:4:18"
                    },
                    "referencedDeclaration": 28954,
                    "src": "354:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vote_$28954_storage_ptr",
                      "typeString": "struct TestBlockPaperScissors.Vote"
                    }
                  },
                  "id": 28959,
                  "nodeType": "ArrayTypeName",
                  "src": "354:6:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Vote_$28954_storage_$dyn_storage_ptr",
                    "typeString": "struct TestBlockPaperScissors.Vote[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Votes",
            "nameLocation": "323:5:18",
            "scope": 29079,
            "visibility": "public"
          },
          {
            "id": 28971,
            "nodeType": "StructDefinition",
            "src": "376:94:18",
            "nodes": [],
            "canonicalName": "TestBlockPaperScissors.VotesInBlock",
            "members": [
              {
                "constant": false,
                "id": 28964,
                "mutability": "mutable",
                "name": "blockVotes",
                "nameLocation": "408:10:18",
                "nodeType": "VariableDeclaration",
                "scope": 28971,
                "src": "402:16:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Votes_$28961_storage_ptr",
                  "typeString": "struct TestBlockPaperScissors.Votes"
                },
                "typeName": {
                  "id": 28963,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 28962,
                    "name": "Votes",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 28961,
                    "src": "402:5:18"
                  },
                  "referencedDeclaration": 28961,
                  "src": "402:5:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Votes_$28961_storage_ptr",
                    "typeString": "struct TestBlockPaperScissors.Votes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28967,
                "mutability": "mutable",
                "name": "paperVotes",
                "nameLocation": "430:10:18",
                "nodeType": "VariableDeclaration",
                "scope": 28971,
                "src": "424:16:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Votes_$28961_storage_ptr",
                  "typeString": "struct TestBlockPaperScissors.Votes"
                },
                "typeName": {
                  "id": 28966,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 28965,
                    "name": "Votes",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 28961,
                    "src": "424:5:18"
                  },
                  "referencedDeclaration": 28961,
                  "src": "424:5:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Votes_$28961_storage_ptr",
                    "typeString": "struct TestBlockPaperScissors.Votes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28970,
                "mutability": "mutable",
                "name": "scissorsVotes",
                "nameLocation": "452:13:18",
                "nodeType": "VariableDeclaration",
                "scope": 28971,
                "src": "446:19:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Votes_$28961_storage_ptr",
                  "typeString": "struct TestBlockPaperScissors.Votes"
                },
                "typeName": {
                  "id": 28969,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 28968,
                    "name": "Votes",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 28961,
                    "src": "446:5:18"
                  },
                  "referencedDeclaration": 28961,
                  "src": "446:5:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Votes_$28961_storage_ptr",
                    "typeString": "struct TestBlockPaperScissors.Votes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "VotesInBlock",
            "nameLocation": "383:12:18",
            "scope": 29079,
            "visibility": "public"
          },
          {
            "id": 28974,
            "nodeType": "VariableDeclaration",
            "src": "474:29:18",
            "nodes": [],
            "constant": false,
            "functionSelector": "249d39e9",
            "mutability": "mutable",
            "name": "BPS",
            "nameLocation": "500:3:18",
            "scope": 29079,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BlockPaperScissors_$574",
              "typeString": "contract BlockPaperScissors"
            },
            "typeName": {
              "id": 28973,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 28972,
                "name": "BlockPaperScissors",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 574,
                "src": "474:18:18"
              },
              "referencedDeclaration": 574,
              "src": "474:18:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BlockPaperScissors_$574",
                "typeString": "contract BlockPaperScissors"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29010,
            "nodeType": "FunctionDefinition",
            "src": "508:193:18",
            "nodes": [],
            "body": {
              "id": 29009,
              "nodeType": "Block",
              "src": "532:169:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 28980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28977,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28943,
                      "src": "538:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 28978,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "546:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 28979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "546:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "538:18:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 28981,
                  "nodeType": "ExpressionStatement",
                  "src": "538:18:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28987,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "579:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestBlockPaperScissors_$29079",
                              "typeString": "contract TestBlockPaperScissors"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestBlockPaperScissors_$29079",
                              "typeString": "contract TestBlockPaperScissors"
                            }
                          ],
                          "id": 28986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "571:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 28985,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "571:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 28988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "571:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "426c6f636b506170657253636973736f7273207465737420636f6e7472616374",
                        "id": 28989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "586:34:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2544c445a2b3bb46149fa612d612f00378bb7e16a7590fb0c86d9dd7224639a",
                          "typeString": "literal_string \"BlockPaperScissors test contract\""
                        },
                        "value": "BlockPaperScissors test contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2544c445a2b3bb46149fa612d612f00378bb7e16a7590fb0c86d9dd7224639a",
                          "typeString": "literal_string \"BlockPaperScissors test contract\""
                        }
                      ],
                      "expression": {
                        "id": 28982,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2414,
                        "src": "562:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12612",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 28984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11690,
                      "src": "562:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 28990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "562:59:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28991,
                  "nodeType": "ExpressionStatement",
                  "src": "562:59:18"
                },
                {
                  "expression": {
                    "id": 28997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28992,
                      "name": "BPS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28974,
                      "src": "627:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BlockPaperScissors_$574",
                        "typeString": "contract BlockPaperScissors"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 28995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "633:22:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_BlockPaperScissors_$574_$",
                          "typeString": "function () returns (contract BlockPaperScissors)"
                        },
                        "typeName": {
                          "id": 28994,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 28993,
                            "name": "BlockPaperScissors",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 574,
                            "src": "637:18:18"
                          },
                          "referencedDeclaration": 574,
                          "src": "637:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BlockPaperScissors_$574",
                            "typeString": "contract BlockPaperScissors"
                          }
                        }
                      },
                      "id": 28996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "633:24:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BlockPaperScissors_$574",
                        "typeString": "contract BlockPaperScissors"
                      }
                    },
                    "src": "627:30:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BlockPaperScissors_$574",
                      "typeString": "contract BlockPaperScissors"
                    }
                  },
                  "id": 28998,
                  "nodeType": "ExpressionStatement",
                  "src": "627:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29004,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28949,
                            "src": "679:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 29003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "671:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 29002,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "671:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 29005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "671:12:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 29006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "685:10:18",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 28999,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2414,
                        "src": "663:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12612",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 29001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12342,
                      "src": "663:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 29007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "663:33:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29008,
                  "nodeType": "ExpressionStatement",
                  "src": "663:33:18"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "517:5:18",
            "parameters": {
              "id": 28975,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "522:2:18"
            },
            "returnParameters": {
              "id": 28976,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "532:0:18"
            },
            "scope": 29079,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29078,
            "nodeType": "FunctionDefinition",
            "src": "705:408:18",
            "nodes": [],
            "body": {
              "id": 29077,
              "nodeType": "Block",
              "src": "746:367:18",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29018,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28949,
                            "src": "769:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 29017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "761:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 29016,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "761:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 29019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "761:12:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 29013,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2414,
                        "src": "752:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12612",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 29015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12313,
                      "src": "752:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 29020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "752:22:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29021,
                  "nodeType": "ExpressionStatement",
                  "src": "752:22:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "626c6f636b",
                        "id": 29027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "815:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20b53acf0daefc8c6ad68c861fb3b543ca541abd101abc1edfcbf6606b838ef4",
                          "typeString": "literal_string \"block\""
                        },
                        "value": "block"
                      },
                      {
                        "hexValue": "617274697374",
                        "id": 29028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "824:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8c87671fe259c56f53406842c278dbf0d49073ecc39fc38bfc052a1b1a125cb",
                          "typeString": "literal_string \"artist\""
                        },
                        "value": "artist"
                      },
                      {
                        "hexValue": "323538",
                        "id": 29029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "834:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_258_by_1",
                          "typeString": "int_const 258"
                        },
                        "value": "258"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_20b53acf0daefc8c6ad68c861fb3b543ca541abd101abc1edfcbf6606b838ef4",
                          "typeString": "literal_string \"block\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8c87671fe259c56f53406842c278dbf0d49073ecc39fc38bfc052a1b1a125cb",
                          "typeString": "literal_string \"artist\""
                        },
                        {
                          "typeIdentifier": "t_rational_258_by_1",
                          "typeString": "int_const 258"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_20b53acf0daefc8c6ad68c861fb3b543ca541abd101abc1edfcbf6606b838ef4",
                            "typeString": "literal_string \"block\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_f8c87671fe259c56f53406842c278dbf0d49073ecc39fc38bfc052a1b1a125cb",
                            "typeString": "literal_string \"artist\""
                          },
                          {
                            "typeIdentifier": "t_rational_258_by_1",
                            "typeString": "int_const 258"
                          }
                        ],
                        "expression": {
                          "id": 29022,
                          "name": "BPS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28974,
                          "src": "780:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BlockPaperScissors_$574",
                            "typeString": "contract BlockPaperScissors"
                          }
                        },
                        "id": 29024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "castVote",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 125,
                        "src": "780:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                          "typeString": "function (string memory,string memory,uint256) payable external"
                        }
                      },
                      "id": 29026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3330303030303030",
                          "id": 29025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "800:13:18",
                          "subdenomination": "gwei",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30000000000000000_by_1",
                            "typeString": "int_const 30000000000000000"
                          },
                          "value": "30000000"
                        }
                      ],
                      "src": "780:34:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$value",
                        "typeString": "function (string memory,string memory,uint256) payable external"
                      }
                    },
                    "id": 29030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "780:58:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29031,
                  "nodeType": "ExpressionStatement",
                  "src": "780:58:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "323538",
                                  "id": 29035,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "877:3:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_258_by_1",
                                    "typeString": "int_const 258"
                                  },
                                  "value": "258"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_258_by_1",
                                    "typeString": "int_const 258"
                                  }
                                ],
                                "expression": {
                                  "id": 29033,
                                  "name": "BPS",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28974,
                                  "src": "854:3:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BlockPaperScissors_$574",
                                    "typeString": "contract BlockPaperScissors"
                                  }
                                },
                                "id": 29034,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "totalVotesForBlock",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 199,
                                "src": "854:22:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_VotesInBlock_$23_memory_ptr_$",
                                  "typeString": "function (uint256) view external returns (struct BlockPaperScissors.VotesInBlock memory)"
                                }
                              },
                              "id": 29036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "854:27:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VotesInBlock_$23_memory_ptr",
                                "typeString": "struct BlockPaperScissors.VotesInBlock memory"
                              }
                            },
                            "id": 29037,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "blockVotes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16,
                            "src": "854:38:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Votes_$13_memory_ptr",
                              "typeString": "struct BlockPaperScissors.Votes memory"
                            }
                          },
                          "id": 29038,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "voters",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "854:45:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Vote_$6_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct BlockPaperScissors.Vote memory[] memory"
                          }
                        },
                        "id": 29039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "854:52:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 29040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "908:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 29032,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2552,
                        2577,
                        2590,
                        2606,
                        2648,
                        2690,
                        2732,
                        2769,
                        2806,
                        2843,
                        895,
                        920,
                        950,
                        975,
                        1034,
                        1059,
                        1089,
                        1114,
                        2214,
                        2249
                      ],
                      "referencedDeclaration": 1089,
                      "src": "845:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 29041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "845:65:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29042,
                  "nodeType": "ExpressionStatement",
                  "src": "845:65:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "626c6f636b",
                                "id": 29046,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "949:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_20b53acf0daefc8c6ad68c861fb3b543ca541abd101abc1edfcbf6606b838ef4",
                                  "typeString": "literal_string \"block\""
                                },
                                "value": "block"
                              },
                              {
                                "hexValue": "323538",
                                "id": 29047,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "958:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_258_by_1",
                                  "typeString": "int_const 258"
                                },
                                "value": "258"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_20b53acf0daefc8c6ad68c861fb3b543ca541abd101abc1edfcbf6606b838ef4",
                                  "typeString": "literal_string \"block\""
                                },
                                {
                                  "typeIdentifier": "t_rational_258_by_1",
                                  "typeString": "int_const 258"
                                }
                              ],
                              "expression": {
                                "id": 29044,
                                "name": "BPS",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28974,
                                "src": "925:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BlockPaperScissors_$574",
                                  "typeString": "contract BlockPaperScissors"
                                }
                              },
                              "id": 29045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalVotesForChoice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 148,
                              "src": "925:23:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$_t_uint256_$returns$_t_struct$_Votes_$13_memory_ptr_$",
                                "typeString": "function (string memory,uint256) view external returns (struct BlockPaperScissors.Votes memory)"
                              }
                            },
                            "id": 29048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "925:37:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Votes_$13_memory_ptr",
                              "typeString": "struct BlockPaperScissors.Votes memory"
                            }
                          },
                          "id": 29049,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "voters",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "925:44:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Vote_$6_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct BlockPaperScissors.Vote memory[] memory"
                          }
                        },
                        "id": 29050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "925:51:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 29051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "978:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 29043,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2552,
                        2577,
                        2590,
                        2606,
                        2648,
                        2690,
                        2732,
                        2769,
                        2806,
                        2843,
                        895,
                        920,
                        950,
                        975,
                        1034,
                        1059,
                        1089,
                        1114,
                        2214,
                        2249
                      ],
                      "referencedDeclaration": 1089,
                      "src": "916:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 29052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "916:64:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29053,
                  "nodeType": "ExpressionStatement",
                  "src": "916:64:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "626c6f636b",
                              "id": 29057,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1019:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_20b53acf0daefc8c6ad68c861fb3b543ca541abd101abc1edfcbf6606b838ef4",
                                "typeString": "literal_string \"block\""
                              },
                              "value": "block"
                            },
                            {
                              "hexValue": "323538",
                              "id": 29058,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1028:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_258_by_1",
                                "typeString": "int_const 258"
                              },
                              "value": "258"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_20b53acf0daefc8c6ad68c861fb3b543ca541abd101abc1edfcbf6606b838ef4",
                                "typeString": "literal_string \"block\""
                              },
                              {
                                "typeIdentifier": "t_rational_258_by_1",
                                "typeString": "int_const 258"
                              }
                            ],
                            "expression": {
                              "id": 29055,
                              "name": "BPS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28974,
                              "src": "995:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BlockPaperScissors_$574",
                                "typeString": "contract BlockPaperScissors"
                              }
                            },
                            "id": 29056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalVotesForChoice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 148,
                            "src": "995:23:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$_t_uint256_$returns$_t_struct$_Votes_$13_memory_ptr_$",
                              "typeString": "function (string memory,uint256) view external returns (struct BlockPaperScissors.Votes memory)"
                            }
                          },
                          "id": 29059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "995:37:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Votes_$13_memory_ptr",
                            "typeString": "struct BlockPaperScissors.Votes memory"
                          }
                        },
                        "id": 29060,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "votes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "995:43:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 29061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1040:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 29054,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2552,
                        2577,
                        2590,
                        2606,
                        2648,
                        2690,
                        2732,
                        2769,
                        2806,
                        2843,
                        895,
                        920,
                        950,
                        975,
                        1034,
                        1059,
                        1089,
                        1114,
                        2214,
                        2249
                      ],
                      "referencedDeclaration": 1089,
                      "src": "986:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 29062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "986:56:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29063,
                  "nodeType": "ExpressionStatement",
                  "src": "986:56:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "arguments": [
                                {
                                  "hexValue": "31",
                                  "id": 29067,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1077:1:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                {
                                  "hexValue": "323538",
                                  "id": 29068,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1080:3:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_258_by_1",
                                    "typeString": "int_const 258"
                                  },
                                  "value": "258"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_258_by_1",
                                    "typeString": "int_const 258"
                                  }
                                ],
                                "expression": {
                                  "id": 29065,
                                  "name": "BPS",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28974,
                                  "src": "1057:3:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BlockPaperScissors_$574",
                                    "typeString": "contract BlockPaperScissors"
                                  }
                                },
                                "id": 29066,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "historyForRange",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 324,
                                "src": "1057:19:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_array$_t_struct$_VotesWithResultsInBlock_$37_memory_ptr_$dyn_memory_ptr_$",
                                  "typeString": "function (uint256,uint256) view external returns (struct BlockPaperScissors.VotesWithResultsInBlock memory[] memory)"
                                }
                              },
                              "id": 29069,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1057:27:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_VotesWithResultsInBlock_$37_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct BlockPaperScissors.VotesWithResultsInBlock memory[] memory"
                              }
                            },
                            "id": 29071,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 29070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1085:1:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1057:30:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VotesWithResultsInBlock_$37_memory_ptr",
                              "typeString": "struct BlockPaperScissors.VotesWithResultsInBlock memory"
                            }
                          },
                          "id": 29072,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "blockVotes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30,
                          "src": "1057:41:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Votes_$13_memory_ptr",
                            "typeString": "struct BlockPaperScissors.Votes memory"
                          }
                        },
                        "id": 29073,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "votes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "1057:47:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 29074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1106:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 29064,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2552,
                        2577,
                        2590,
                        2606,
                        2648,
                        2690,
                        2732,
                        2769,
                        2806,
                        2843,
                        895,
                        920,
                        950,
                        975,
                        1034,
                        1059,
                        1089,
                        1114,
                        2214,
                        2249
                      ],
                      "referencedDeclaration": 1089,
                      "src": "1048:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 29075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1048:60:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29076,
                  "nodeType": "ExpressionStatement",
                  "src": "1048:60:18"
                }
              ]
            },
            "functionSelector": "0bfc0194",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCastVoteAndGetters",
            "nameLocation": "714:22:18",
            "parameters": {
              "id": 29011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "736:2:18"
            },
            "returnParameters": {
              "id": 29012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "746:0:18"
            },
            "scope": 29079,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28940,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11300,
              "src": "187:4:18"
            },
            "id": 28941,
            "nodeType": "InheritanceSpecifier",
            "src": "187:4:18"
          }
        ],
        "canonicalName": "TestBlockPaperScissors",
        "contractDependencies": [
          574
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          29079,
          11300,
          2421,
          2418,
          11251,
          7050,
          6760,
          6101,
          4529,
          3835,
          2361
        ],
        "name": "TestBlockPaperScissors",
        "nameLocation": "161:22:18",
        "scope": 29080,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 18
}